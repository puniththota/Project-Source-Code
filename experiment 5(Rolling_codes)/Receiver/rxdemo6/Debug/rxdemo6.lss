
rxdemo6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000180  00800200  000012e4  00001378  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000012e4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000013c  00800380  00800380  000014f8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000014f8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001554  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000230  00000000  00000000  00001594  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002714  00000000  00000000  000017c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001afb  00000000  00000000  00003ed8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001415  00000000  00000000  000059d3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004f0  00000000  00000000  00006de8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000cda  00000000  00000000  000072d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001132  00000000  00000000  00007fb2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d0  00000000  00000000  000090e4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	8f c0       	rjmp	.+286    	; 0x120 <__ctors_end>
       2:	00 00       	nop
       4:	ab c0       	rjmp	.+342    	; 0x15c <__bad_interrupt>
       6:	00 00       	nop
       8:	a9 c0       	rjmp	.+338    	; 0x15c <__bad_interrupt>
       a:	00 00       	nop
       c:	a7 c0       	rjmp	.+334    	; 0x15c <__bad_interrupt>
       e:	00 00       	nop
      10:	a5 c0       	rjmp	.+330    	; 0x15c <__bad_interrupt>
      12:	00 00       	nop
      14:	a3 c0       	rjmp	.+326    	; 0x15c <__bad_interrupt>
      16:	00 00       	nop
      18:	a1 c0       	rjmp	.+322    	; 0x15c <__bad_interrupt>
      1a:	00 00       	nop
      1c:	9f c0       	rjmp	.+318    	; 0x15c <__bad_interrupt>
      1e:	00 00       	nop
      20:	9d c0       	rjmp	.+314    	; 0x15c <__bad_interrupt>
      22:	00 00       	nop
      24:	9b c0       	rjmp	.+310    	; 0x15c <__bad_interrupt>
      26:	00 00       	nop
      28:	99 c0       	rjmp	.+306    	; 0x15c <__bad_interrupt>
      2a:	00 00       	nop
      2c:	97 c0       	rjmp	.+302    	; 0x15c <__bad_interrupt>
      2e:	00 00       	nop
      30:	95 c0       	rjmp	.+298    	; 0x15c <__bad_interrupt>
      32:	00 00       	nop
      34:	93 c0       	rjmp	.+294    	; 0x15c <__bad_interrupt>
      36:	00 00       	nop
      38:	91 c0       	rjmp	.+290    	; 0x15c <__bad_interrupt>
      3a:	00 00       	nop
      3c:	8f c0       	rjmp	.+286    	; 0x15c <__bad_interrupt>
      3e:	00 00       	nop
      40:	8d c0       	rjmp	.+282    	; 0x15c <__bad_interrupt>
      42:	00 00       	nop
      44:	8b c0       	rjmp	.+278    	; 0x15c <__bad_interrupt>
      46:	00 00       	nop
      48:	89 c0       	rjmp	.+274    	; 0x15c <__bad_interrupt>
      4a:	00 00       	nop
      4c:	87 c0       	rjmp	.+270    	; 0x15c <__bad_interrupt>
      4e:	00 00       	nop
      50:	85 c0       	rjmp	.+266    	; 0x15c <__bad_interrupt>
      52:	00 00       	nop
      54:	83 c0       	rjmp	.+262    	; 0x15c <__bad_interrupt>
      56:	00 00       	nop
      58:	81 c0       	rjmp	.+258    	; 0x15c <__bad_interrupt>
      5a:	00 00       	nop
      5c:	7f c0       	rjmp	.+254    	; 0x15c <__bad_interrupt>
      5e:	00 00       	nop
      60:	7d c0       	rjmp	.+250    	; 0x15c <__bad_interrupt>
      62:	00 00       	nop
      64:	7b c0       	rjmp	.+246    	; 0x15c <__bad_interrupt>
      66:	00 00       	nop
      68:	79 c0       	rjmp	.+242    	; 0x15c <__bad_interrupt>
      6a:	00 00       	nop
      6c:	77 c0       	rjmp	.+238    	; 0x15c <__bad_interrupt>
      6e:	00 00       	nop
      70:	75 c0       	rjmp	.+234    	; 0x15c <__bad_interrupt>
      72:	00 00       	nop
      74:	73 c0       	rjmp	.+230    	; 0x15c <__bad_interrupt>
      76:	00 00       	nop
      78:	71 c0       	rjmp	.+226    	; 0x15c <__bad_interrupt>
      7a:	00 00       	nop
      7c:	6f c0       	rjmp	.+222    	; 0x15c <__bad_interrupt>
      7e:	00 00       	nop
      80:	6d c0       	rjmp	.+218    	; 0x15c <__bad_interrupt>
      82:	00 00       	nop
      84:	6b c0       	rjmp	.+214    	; 0x15c <__bad_interrupt>
      86:	00 00       	nop
      88:	69 c0       	rjmp	.+210    	; 0x15c <__bad_interrupt>
      8a:	00 00       	nop
      8c:	67 c0       	rjmp	.+206    	; 0x15c <__bad_interrupt>
      8e:	00 00       	nop
      90:	65 c0       	rjmp	.+202    	; 0x15c <__bad_interrupt>
      92:	00 00       	nop
      94:	63 c0       	rjmp	.+198    	; 0x15c <__bad_interrupt>
      96:	00 00       	nop
      98:	61 c0       	rjmp	.+194    	; 0x15c <__bad_interrupt>
      9a:	00 00       	nop
      9c:	5f c0       	rjmp	.+190    	; 0x15c <__bad_interrupt>
      9e:	00 00       	nop
      a0:	5d c0       	rjmp	.+186    	; 0x15c <__bad_interrupt>
      a2:	00 00       	nop
      a4:	5b c0       	rjmp	.+182    	; 0x15c <__bad_interrupt>
      a6:	00 00       	nop
      a8:	59 c0       	rjmp	.+178    	; 0x15c <__bad_interrupt>
      aa:	00 00       	nop
      ac:	57 c0       	rjmp	.+174    	; 0x15c <__bad_interrupt>
      ae:	00 00       	nop
      b0:	55 c0       	rjmp	.+170    	; 0x15c <__bad_interrupt>
      b2:	00 00       	nop
      b4:	53 c0       	rjmp	.+166    	; 0x15c <__bad_interrupt>
      b6:	00 00       	nop
      b8:	51 c0       	rjmp	.+162    	; 0x15c <__bad_interrupt>
      ba:	00 00       	nop
      bc:	4f c0       	rjmp	.+158    	; 0x15c <__bad_interrupt>
      be:	00 00       	nop
      c0:	4d c0       	rjmp	.+154    	; 0x15c <__bad_interrupt>
      c2:	00 00       	nop
      c4:	4b c0       	rjmp	.+150    	; 0x15c <__bad_interrupt>
      c6:	00 00       	nop
      c8:	49 c0       	rjmp	.+146    	; 0x15c <__bad_interrupt>
      ca:	00 00       	nop
      cc:	47 c0       	rjmp	.+142    	; 0x15c <__bad_interrupt>
      ce:	00 00       	nop
      d0:	45 c0       	rjmp	.+138    	; 0x15c <__bad_interrupt>
      d2:	00 00       	nop
      d4:	43 c0       	rjmp	.+134    	; 0x15c <__bad_interrupt>
      d6:	00 00       	nop
      d8:	41 c0       	rjmp	.+130    	; 0x15c <__bad_interrupt>
      da:	00 00       	nop
      dc:	3f c0       	rjmp	.+126    	; 0x15c <__bad_interrupt>
      de:	00 00       	nop
      e0:	3d c0       	rjmp	.+122    	; 0x15c <__bad_interrupt>
      e2:	00 00       	nop
      e4:	3b c0       	rjmp	.+118    	; 0x15c <__bad_interrupt>
      e6:	00 00       	nop
      e8:	39 c0       	rjmp	.+114    	; 0x15c <__bad_interrupt>
      ea:	00 00       	nop
      ec:	37 c0       	rjmp	.+110    	; 0x15c <__bad_interrupt>
      ee:	00 00       	nop
      f0:	35 c0       	rjmp	.+106    	; 0x15c <__bad_interrupt>
      f2:	00 00       	nop
      f4:	33 c0       	rjmp	.+102    	; 0x15c <__bad_interrupt>
      f6:	00 00       	nop
      f8:	31 c0       	rjmp	.+98     	; 0x15c <__bad_interrupt>
      fa:	00 00       	nop
      fc:	2f c0       	rjmp	.+94     	; 0x15c <__bad_interrupt>
      fe:	00 00       	nop
     100:	2d c0       	rjmp	.+90     	; 0x15c <__bad_interrupt>
     102:	00 00       	nop
     104:	2b c0       	rjmp	.+86     	; 0x15c <__bad_interrupt>
     106:	00 00       	nop
     108:	29 c0       	rjmp	.+82     	; 0x15c <__bad_interrupt>
     10a:	00 00       	nop
     10c:	27 c0       	rjmp	.+78     	; 0x15c <__bad_interrupt>
     10e:	00 00       	nop
     110:	25 c0       	rjmp	.+74     	; 0x15c <__bad_interrupt>
     112:	00 00       	nop
     114:	23 c0       	rjmp	.+70     	; 0x15c <__bad_interrupt>
     116:	00 00       	nop
     118:	21 c0       	rjmp	.+66     	; 0x15c <__bad_interrupt>
     11a:	00 00       	nop
     11c:	1f c0       	rjmp	.+62     	; 0x15c <__bad_interrupt>
	...

00000120 <__ctors_end>:
     120:	11 24       	eor	r1, r1
     122:	1f be       	out	0x3f, r1	; 63
     124:	cf ef       	ldi	r28, 0xFF	; 255
     126:	d1 e4       	ldi	r29, 0x41	; 65
     128:	de bf       	out	0x3e, r29	; 62
     12a:	cd bf       	out	0x3d, r28	; 61

0000012c <__do_copy_data>:
     12c:	13 e0       	ldi	r17, 0x03	; 3
     12e:	a0 e0       	ldi	r26, 0x00	; 0
     130:	b2 e0       	ldi	r27, 0x02	; 2
     132:	e4 ee       	ldi	r30, 0xE4	; 228
     134:	f2 e1       	ldi	r31, 0x12	; 18
     136:	00 e0       	ldi	r16, 0x00	; 0
     138:	0b bf       	out	0x3b, r16	; 59
     13a:	02 c0       	rjmp	.+4      	; 0x140 <__do_copy_data+0x14>
     13c:	07 90       	elpm	r0, Z+
     13e:	0d 92       	st	X+, r0
     140:	a0 38       	cpi	r26, 0x80	; 128
     142:	b1 07       	cpc	r27, r17
     144:	d9 f7       	brne	.-10     	; 0x13c <__do_copy_data+0x10>

00000146 <__do_clear_bss>:
     146:	24 e0       	ldi	r18, 0x04	; 4
     148:	a0 e8       	ldi	r26, 0x80	; 128
     14a:	b3 e0       	ldi	r27, 0x03	; 3
     14c:	01 c0       	rjmp	.+2      	; 0x150 <.do_clear_bss_start>

0000014e <.do_clear_bss_loop>:
     14e:	1d 92       	st	X+, r1

00000150 <.do_clear_bss_start>:
     150:	ac 3b       	cpi	r26, 0xBC	; 188
     152:	b2 07       	cpc	r27, r18
     154:	e1 f7       	brne	.-8      	; 0x14e <.do_clear_bss_loop>
     156:	e9 d1       	rcall	.+978    	; 0x52a <main>
     158:	0c 94 70 09 	jmp	0x12e0	; 0x12e0 <_exit>

0000015c <__bad_interrupt>:
     15c:	51 cf       	rjmp	.-350    	; 0x0 <__vectors>

0000015e <init>:
static unsigned char plain[128];
unsigned char key[]={0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x04,0x01};

void init() 
{
	leds_init();
     15e:	aa d2       	rcall	.+1364   	; 0x6b4 <leds_init>
	leds_on(LED_RED);
     160:	83 e0       	ldi	r24, 0x03	; 3
     162:	af d2       	rcall	.+1374   	; 0x6c2 <leds_on>
	serial_init(9600);
     164:	60 e8       	ldi	r22, 0x80	; 128
     166:	75 e2       	ldi	r23, 0x25	; 37
     168:	80 e0       	ldi	r24, 0x00	; 0
     16a:	90 e0       	ldi	r25, 0x00	; 0
     16c:	08 d4       	rcall	.+2064   	; 0x97e <serial_init>
	serial_puts("Demo program running.\n\r");
     16e:	81 e2       	ldi	r24, 0x21	; 33
     170:	92 e0       	ldi	r25, 0x02	; 2
     172:	75 d4       	rcall	.+2282   	; 0xa5e <serial_puts>
	leds_off(LED_RED);
     174:	83 e0       	ldi	r24, 0x03	; 3
     176:	b1 d2       	rcall	.+1378   	; 0x6da <leds_off>
	leds_on(LED_ORANGE);
     178:	82 e0       	ldi	r24, 0x02	; 2
	button_init();
     17a:	a3 d2       	rcall	.+1350   	; 0x6c2 <leds_on>
	radio_init(NODE);
     17c:	cc d1       	rcall	.+920    	; 0x516 <button_init>
     17e:	82 e0       	ldi	r24, 0x02	; 2
     180:	90 e0       	ldi	r25, 0x00	; 0
     182:	b7 d2       	rcall	.+1390   	; 0x6f2 <radio_init>
	radio_start();
     184:	eb d2       	rcall	.+1494   	; 0x75c <radio_start>
     186:	82 e0       	ldi	r24, 0x02	; 2
	crypto_init(key);
     188:	92 e0       	ldi	r25, 0x02	; 2
     18a:	87 c4       	rjmp	.+2318   	; 0xa9a <crypto_init>
     18c:	08 95       	ret

0000018e <loop>:
     18e:	af 92       	push	r10
     190:	bf 92       	push	r11
static int flag=false;
static unsigned long until = 0;
int rcode=0;


void loop() {
     192:	cf 92       	push	r12
     194:	df 92       	push	r13
     196:	ef 92       	push	r14
     198:	ff 92       	push	r15
     19a:	0f 93       	push	r16
     19c:	1f 93       	push	r17
     19e:	cf 93       	push	r28
     1a0:	df 93       	push	r29
     1a2:	cd b7       	in	r28, 0x3d	; 61
     1a4:	de b7       	in	r29, 0x3e	; 62
     1a6:	27 97       	sbiw	r28, 0x07	; 7
     1a8:	0f b6       	in	r0, 0x3f	; 63
     1aa:	f8 94       	cli
     1ac:	de bf       	out	0x3e, r29	; 62
     1ae:	0f be       	out	0x3f, r0	; 63
     1b0:	cd bf       	out	0x3d, r28	; 61
   	
   unsigned short dst=0;
     1b2:	1a 82       	std	Y+2, r1	; 0x02
     1b4:	19 82       	std	Y+1, r1	; 0x01
   unsigned short src=0;
     1b6:	1c 82       	std	Y+4, r1	; 0x04
     1b8:	1b 82       	std	Y+3, r1	; 0x03
   unsigned char valid=0;
     1ba:	1d 82       	std	Y+5, r1	; 0x05
   unsigned char energy=0;
     1bc:	1e 82       	std	Y+6, r1	; 0x06
   unsigned char lqi=0;
     1be:	1f 82       	std	Y+7, r1	; 0x07
	   
   if (first) {
     1c0:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
     1c4:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <__data_start+0x1>
     1c8:	89 2b       	or	r24, r25
     1ca:	41 f0       	breq	.+16     	; 0x1dc <loop+0x4e>
	   leds_off(LED_ORANGE);
     1cc:	82 e0       	ldi	r24, 0x02	; 2
     1ce:	85 d2       	rcall	.+1290   	; 0x6da <leds_off>
	   leds_on(LED_GREEN);
     1d0:	81 e0       	ldi	r24, 0x01	; 1
     1d2:	77 d2       	rcall	.+1262   	; 0x6c2 <leds_on>
	   first = false;
     1d4:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <__data_start+0x1>
     1d8:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__data_start>
   }
	   
   if ((++counter)>100000L) {
     1dc:	80 91 84 03 	lds	r24, 0x0384	; 0x800384 <counter>
     1e0:	90 91 85 03 	lds	r25, 0x0385	; 0x800385 <counter+0x1>
     1e4:	a0 91 86 03 	lds	r26, 0x0386	; 0x800386 <counter+0x2>
     1e8:	b0 91 87 03 	lds	r27, 0x0387	; 0x800387 <counter+0x3>
     1ec:	01 96       	adiw	r24, 0x01	; 1
     1ee:	a1 1d       	adc	r26, r1
     1f0:	b1 1d       	adc	r27, r1
     1f2:	81 3a       	cpi	r24, 0xA1	; 161
     1f4:	26 e8       	ldi	r18, 0x86	; 134
     1f6:	92 07       	cpc	r25, r18
     1f8:	21 e0       	ldi	r18, 0x01	; 1
     1fa:	a2 07       	cpc	r26, r18
     1fc:	b1 05       	cpc	r27, r1
     1fe:	4c f4       	brge	.+18     	; 0x212 <loop+0x84>
     200:	80 93 84 03 	sts	0x0384, r24	; 0x800384 <counter>
     204:	90 93 85 03 	sts	0x0385, r25	; 0x800385 <counter+0x1>
     208:	a0 93 86 03 	sts	0x0386, r26	; 0x800386 <counter+0x2>
     20c:	b0 93 87 03 	sts	0x0387, r27	; 0x800387 <counter+0x3>
     210:	2a c0       	rjmp	.+84     	; 0x266 <loop+0xd8>
	   counter = 0;
     212:	10 92 84 03 	sts	0x0384, r1	; 0x800384 <counter>
     216:	10 92 85 03 	sts	0x0385, r1	; 0x800385 <counter+0x1>
     21a:	10 92 86 03 	sts	0x0386, r1	; 0x800386 <counter+0x2>
     21e:	10 92 87 03 	sts	0x0387, r1	; 0x800387 <counter+0x3>
	   if (flag) {
     222:	80 91 82 03 	lds	r24, 0x0382	; 0x800382 <flag>
     226:	90 91 83 03 	lds	r25, 0x0383	; 0x800383 <flag+0x1>
     22a:	89 2b       	or	r24, r25
     22c:	71 f0       	breq	.+28     	; 0x24a <loop+0xbc>
		   flag = false;
     22e:	10 92 83 03 	sts	0x0383, r1	; 0x800383 <flag+0x1>
     232:	10 92 82 03 	sts	0x0382, r1	; 0x800382 <flag>
		   leds_off(LED_GREEN);
     236:	81 e0       	ldi	r24, 0x01	; 1
     238:	50 d2       	rcall	.+1184   	; 0x6da <leds_off>
		   printf("off\n\r");
     23a:	89 e3       	ldi	r24, 0x39	; 57
     23c:	92 e0       	ldi	r25, 0x02	; 2
     23e:	9f 93       	push	r25
     240:	8f 93       	push	r24
     242:	59 d5       	rcall	.+2738   	; 0xcf6 <printf>
     244:	0f 90       	pop	r0
     246:	0f 90       	pop	r0
     248:	0e c0       	rjmp	.+28     	; 0x266 <loop+0xd8>
	   }
	   else {
		   flag = true;
     24a:	81 e0       	ldi	r24, 0x01	; 1
     24c:	90 e0       	ldi	r25, 0x00	; 0
     24e:	90 93 83 03 	sts	0x0383, r25	; 0x800383 <flag+0x1>
     252:	80 93 82 03 	sts	0x0382, r24	; 0x800382 <flag>
		   leds_on(LED_GREEN);
		   printf("on...");
     256:	35 d2       	rcall	.+1130   	; 0x6c2 <leds_on>
     258:	8f e3       	ldi	r24, 0x3F	; 63
     25a:	92 e0       	ldi	r25, 0x02	; 2
     25c:	9f 93       	push	r25
     25e:	8f 93       	push	r24
     260:	4a d5       	rcall	.+2708   	; 0xcf6 <printf>
     262:	0f 90       	pop	r0
	   }
   }
	   
   if (button_pressed()) {
     264:	0f 90       	pop	r0
     266:	5a d1       	rcall	.+692    	; 0x51c <button_pressed>
     268:	88 23       	and	r24, r24
	   if (mode==NORMAL) {
     26a:	f9 f0       	breq	.+62     	; 0x2aa <loop+0x11c>
     26c:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <mode>
		   leds_on(LED_ORANGE);
     270:	81 11       	cpse	r24, r1
     272:	0d c0       	rjmp	.+26     	; 0x28e <loop+0x100>
     274:	82 e0       	ldi	r24, 0x02	; 2
		   printf("Receive in raw mode.\n\r");		   
     276:	25 d2       	rcall	.+1098   	; 0x6c2 <leds_on>
     278:	85 e4       	ldi	r24, 0x45	; 69
     27a:	92 e0       	ldi	r25, 0x02	; 2
     27c:	9f 93       	push	r25
     27e:	8f 93       	push	r24
		   mode = RAW;
     280:	3a d5       	rcall	.+2676   	; 0xcf6 <printf>
     282:	81 e0       	ldi	r24, 0x01	; 1
     284:	80 93 08 04 	sts	0x0408, r24	; 0x800408 <mode>
     288:	0f 90       	pop	r0
	   }
	   else {
		   leds_off(LED_ORANGE);
     28a:	0f 90       	pop	r0
     28c:	0b c0       	rjmp	.+22     	; 0x2a4 <loop+0x116>
		   printf("Receive in normal mode.\n\r");		   
     28e:	82 e0       	ldi	r24, 0x02	; 2
     290:	24 d2       	rcall	.+1096   	; 0x6da <leds_off>
     292:	8c e5       	ldi	r24, 0x5C	; 92
     294:	92 e0       	ldi	r25, 0x02	; 2
     296:	9f 93       	push	r25
		   mode = NORMAL;		   
     298:	8f 93       	push	r24
     29a:	2d d5       	rcall	.+2650   	; 0xcf6 <printf>
     29c:	10 92 08 04 	sts	0x0408, r1	; 0x800408 <mode>
	   }
	   while (button_pressed()); 
     2a0:	0f 90       	pop	r0
     2a2:	0f 90       	pop	r0
     2a4:	3b d1       	rcall	.+630    	; 0x51c <button_pressed>
     2a6:	81 11       	cpse	r24, r1
   }

   if (radio_rxed()) {
     2a8:	fd cf       	rjmp	.-6      	; 0x2a4 <loop+0x116>
     2aa:	6a d2       	rcall	.+1236   	; 0x780 <radio_rxed>
     2ac:	88 23       	and	r24, r24
     2ae:	09 f4       	brne	.+2      	; 0x2b2 <loop+0x124>
     2b0:	21 c1       	rjmp	.+578    	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
		if (mode==NORMAL) {
     2b2:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <mode>
     2b6:	81 11       	cpse	r24, r1
     2b8:	ac c0       	rjmp	.+344    	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
			int rxLen=radio_recv(&buffer[0], 128, &dst, &src, &valid, &energy, &lqi);
     2ba:	ce 01       	movw	r24, r28
     2bc:	07 96       	adiw	r24, 0x07	; 7
     2be:	6c 01       	movw	r12, r24
     2c0:	fe 01       	movw	r30, r28
     2c2:	36 96       	adiw	r30, 0x06	; 6
     2c4:	7f 01       	movw	r14, r30
     2c6:	8e 01       	movw	r16, r28
     2c8:	0b 5f       	subi	r16, 0xFB	; 251
     2ca:	1f 4f       	sbci	r17, 0xFF	; 255
     2cc:	9e 01       	movw	r18, r28
     2ce:	2d 5f       	subi	r18, 0xFD	; 253
     2d0:	3f 4f       	sbci	r19, 0xFF	; 255
     2d2:	ae 01       	movw	r20, r28
     2d4:	4f 5f       	subi	r20, 0xFF	; 255
     2d6:	5f 4f       	sbci	r21, 0xFF	; 255
     2d8:	60 e8       	ldi	r22, 0x80	; 128
     2da:	89 e0       	ldi	r24, 0x09	; 9
     2dc:	94 e0       	ldi	r25, 0x04	; 4
     2de:	56 d2       	rcall	.+1196   	; 0x78c <radio_recv>
			printf("Message received from transmitter %02x to receiver %02x with data :", 
     2e0:	c8 2e       	mov	r12, r24
     2e2:	8a 81       	ldd	r24, Y+2	; 0x02
     2e4:	8f 93       	push	r24
     2e6:	89 81       	ldd	r24, Y+1	; 0x01
     2e8:	8f 93       	push	r24
     2ea:	8c 81       	ldd	r24, Y+4	; 0x04
     2ec:	8f 93       	push	r24
     2ee:	8b 81       	ldd	r24, Y+3	; 0x03
     2f0:	8f 93       	push	r24
     2f2:	86 e7       	ldi	r24, 0x76	; 118
     2f4:	92 e0       	ldi	r25, 0x02	; 2
     2f6:	9f 93       	push	r25
     2f8:	8f 93       	push	r24
     2fa:	fd d4       	rcall	.+2554   	; 0xcf6 <printf>
					src,dst);
            for(int i=0;i<rxLen;i++)
     2fc:	0f 90       	pop	r0
     2fe:	0f 90       	pop	r0
     300:	0f 90       	pop	r0
     302:	0f 90       	pop	r0
     304:	0f 90       	pop	r0
     306:	0f 90       	pop	r0
     308:	cc 20       	and	r12, r12
     30a:	e9 f0       	breq	.+58     	; 0x346 <loop+0x1b8>
     30c:	09 e0       	ldi	r16, 0x09	; 9
     30e:	14 e0       	ldi	r17, 0x04	; 4
     310:	8c 2d       	mov	r24, r12
     312:	90 e0       	ldi	r25, 0x00	; 0
     314:	9c 01       	movw	r18, r24
     316:	27 5f       	subi	r18, 0xF7	; 247
     318:	3b 4f       	sbci	r19, 0xFB	; 251
			{
			 printf("%02x",buffer[i]);
     31a:	69 01       	movw	r12, r18
     31c:	0f 2e       	mov	r0, r31
     31e:	fa eb       	ldi	r31, 0xBA	; 186
     320:	ef 2e       	mov	r14, r31
     322:	f2 e0       	ldi	r31, 0x02	; 2
     324:	ff 2e       	mov	r15, r31
     326:	f0 2d       	mov	r31, r0
     328:	f8 01       	movw	r30, r16
     32a:	81 91       	ld	r24, Z+
     32c:	8f 01       	movw	r16, r30
     32e:	1f 92       	push	r1
     330:	8f 93       	push	r24
     332:	ff 92       	push	r15
     334:	ef 92       	push	r14
   if (radio_rxed()) {
		if (mode==NORMAL) {
			int rxLen=radio_recv(&buffer[0], 128, &dst, &src, &valid, &energy, &lqi);
			printf("Message received from transmitter %02x to receiver %02x with data :", 
					src,dst);
            for(int i=0;i<rxLen;i++)
     336:	df d4       	rcall	.+2494   	; 0xcf6 <printf>
     338:	0f 90       	pop	r0
     33a:	0f 90       	pop	r0
     33c:	0f 90       	pop	r0
     33e:	0f 90       	pop	r0
     340:	c0 16       	cp	r12, r16
			{
			 printf("%02x",buffer[i]);
			}
            crypto_decrypt(buffer,plain);
     342:	d1 06       	cpc	r13, r17
     344:	89 f7       	brne	.-30     	; 0x328 <loop+0x19a>
     346:	68 e8       	ldi	r22, 0x88	; 136
     348:	73 e0       	ldi	r23, 0x03	; 3
     34a:	89 e0       	ldi	r24, 0x09	; 9
     34c:	94 e0       	ldi	r25, 0x04	; 4
			printf("Message decrypted:");
     34e:	1a d4       	rcall	.+2100   	; 0xb84 <crypto_decrypt>
     350:	8f eb       	ldi	r24, 0xBF	; 191
     352:	92 e0       	ldi	r25, 0x02	; 2
     354:	9f 93       	push	r25
     356:	8f 93       	push	r24
     358:	ce d4       	rcall	.+2460   	; 0xcf6 <printf>
     35a:	08 e8       	ldi	r16, 0x88	; 136
     35c:	13 e0       	ldi	r17, 0x03	; 3
     35e:	0f 2e       	mov	r0, r31
     360:	fc e8       	ldi	r31, 0x8C	; 140
     362:	cf 2e       	mov	r12, r31
     364:	f3 e0       	ldi	r31, 0x03	; 3
     366:	df 2e       	mov	r13, r31
     368:	f0 2d       	mov	r31, r0
     36a:	0f 90       	pop	r0
			for(int i=0;i<4;i++){
			printf("%02x ",plain[i]);
     36c:	0f 90       	pop	r0
     36e:	0f 2e       	mov	r0, r31
     370:	f2 ed       	ldi	r31, 0xD2	; 210
     372:	ef 2e       	mov	r14, r31
     374:	f2 e0       	ldi	r31, 0x02	; 2
     376:	ff 2e       	mov	r15, r31
     378:	f0 2d       	mov	r31, r0
     37a:	f8 01       	movw	r30, r16
     37c:	81 91       	ld	r24, Z+
     37e:	8f 01       	movw	r16, r30
     380:	1f 92       	push	r1
     382:	8f 93       	push	r24
     384:	ff 92       	push	r15
     386:	ef 92       	push	r14
     388:	b6 d4       	rcall	.+2412   	; 0xcf6 <printf>
			{
			 printf("%02x",buffer[i]);
			}
            crypto_decrypt(buffer,plain);
			printf("Message decrypted:");
			for(int i=0;i<4;i++){
     38a:	0f 90       	pop	r0
     38c:	0f 90       	pop	r0
     38e:	0f 90       	pop	r0
     390:	0f 90       	pop	r0
     392:	0c 15       	cp	r16, r12
     394:	1d 05       	cpc	r17, r13
     396:	89 f7       	brne	.-30     	; 0x37a <loop+0x1ec>
			printf("%02x ",plain[i]);
			}
			if(plain[0]=='0'&&plain[1]==0x63&&plain[2]==0x33&&plain[3]>rcode){
     398:	80 91 88 03 	lds	r24, 0x0388	; 0x800388 <plain>
     39c:	80 33       	cpi	r24, 0x30	; 48
     39e:	09 f0       	breq	.+2      	; 0x3a2 <loop+0x214>
     3a0:	a9 c0       	rjmp	.+338    	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
     3a2:	80 91 89 03 	lds	r24, 0x0389	; 0x800389 <plain+0x1>
     3a6:	83 36       	cpi	r24, 0x63	; 99
     3a8:	09 f0       	breq	.+2      	; 0x3ac <loop+0x21e>
     3aa:	a4 c0       	rjmp	.+328    	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
     3ac:	80 91 8a 03 	lds	r24, 0x038A	; 0x80038a <plain+0x2>
     3b0:	83 33       	cpi	r24, 0x33	; 51
     3b2:	09 f0       	breq	.+2      	; 0x3b6 <loop+0x228>
     3b4:	9f c0       	rjmp	.+318    	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
     3b6:	80 91 8b 03 	lds	r24, 0x038B	; 0x80038b <plain+0x3>
     3ba:	90 e0       	ldi	r25, 0x00	; 0
     3bc:	20 91 80 03 	lds	r18, 0x0380	; 0x800380 <__data_end>
     3c0:	30 91 81 03 	lds	r19, 0x0381	; 0x800381 <__data_end+0x1>
     3c4:	28 17       	cp	r18, r24
		    if(dst==2 && src==1){
     3c6:	39 07       	cpc	r19, r25
     3c8:	0c f0       	brlt	.+2      	; 0x3cc <loop+0x23e>
     3ca:	94 c0       	rjmp	.+296    	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
     3cc:	89 81       	ldd	r24, Y+1	; 0x01
     3ce:	9a 81       	ldd	r25, Y+2	; 0x02
     3d0:	02 97       	sbiw	r24, 0x02	; 2
     3d2:	d9 f4       	brne	.+54     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
			printf("Valid code received and source,destination valid \n");
     3d4:	8b 81       	ldd	r24, Y+3	; 0x03
     3d6:	9c 81       	ldd	r25, Y+4	; 0x04
     3d8:	01 97       	sbiw	r24, 0x01	; 1
     3da:	b9 f4       	brne	.+46     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
			printf("Lock opened\n");
     3dc:	88 ed       	ldi	r24, 0xD8	; 216
     3de:	92 e0       	ldi	r25, 0x02	; 2
     3e0:	a2 d4       	rcall	.+2372   	; 0xd26 <puts>
			leds_on(LED_ORANGE);
     3e2:	8a e0       	ldi	r24, 0x0A	; 10
     3e4:	93 e0       	ldi	r25, 0x03	; 3
     3e6:	9f d4       	rcall	.+2366   	; 0xd26 <puts>
			printf("Lock closed");
     3e8:	82 e0       	ldi	r24, 0x02	; 2
     3ea:	6b d1       	rcall	.+726    	; 0x6c2 <leds_on>
     3ec:	86 e1       	ldi	r24, 0x16	; 22
     3ee:	93 e0       	ldi	r25, 0x03	; 3
     3f0:	9f 93       	push	r25
     3f2:	8f 93       	push	r24
			rcode=plain[3];
     3f4:	80 d4       	rcall	.+2304   	; 0xcf6 <printf>
     3f6:	80 91 8b 03 	lds	r24, 0x038B	; 0x80038b <plain+0x3>
     3fa:	90 e0       	ldi	r25, 0x00	; 0
     3fc:	90 93 81 03 	sts	0x0381, r25	; 0x800381 <__data_end+0x1>
     400:	80 93 80 03 	sts	0x0380, r24	; 0x800380 <__data_end>
     404:	0f 90       	pop	r0
			}
			else
			{
			printf("Source or destination is invalid \n");
     406:	0f 90       	pop	r0
     408:	75 c0       	rjmp	.+234    	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
     40a:	82 e2       	ldi	r24, 0x22	; 34
     40c:	93 e0       	ldi	r25, 0x03	; 3
     40e:	8b d4       	rcall	.+2326   	; 0xd26 <puts>
			//	else
			//		printf(".");
		  // printf("\"\n\r");
		}
		else { // read the RFA1 manual DOC8266 to understand the raw 802.15.4 fields: [header][data][crc][lqi]
			int rxLen=radio_raw_recv(&buffer[0], 128, &valid, &energy);
     410:	71 c0       	rjmp	.+226    	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
     412:	9e 01       	movw	r18, r28
     414:	2a 5f       	subi	r18, 0xFA	; 250
     416:	3f 4f       	sbci	r19, 0xFF	; 255
     418:	ae 01       	movw	r20, r28
     41a:	4b 5f       	subi	r20, 0xFB	; 251
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	60 e8       	ldi	r22, 0x80	; 128
     420:	89 e0       	ldi	r24, 0x09	; 9
     422:	94 e0       	ldi	r25, 0x04	; 4
     424:	49 d2       	rcall	.+1170   	; 0x8b8 <radio_raw_recv>
     426:	c8 2e       	mov	r12, r24
     428:	08 2f       	mov	r16, r24
			printf("Radio rx. valid=%d energy=%d len=%d. Data=", valid, energy, rxLen);
     42a:	10 e0       	ldi	r17, 0x00	; 0
     42c:	1f 92       	push	r1
     42e:	8f 93       	push	r24
     430:	8e 81       	ldd	r24, Y+6	; 0x06
     432:	1f 92       	push	r1
     434:	8f 93       	push	r24
     436:	8d 81       	ldd	r24, Y+5	; 0x05
     438:	1f 92       	push	r1
     43a:	8f 93       	push	r24
     43c:	84 e4       	ldi	r24, 0x44	; 68
     43e:	93 e0       	ldi	r25, 0x03	; 3
     440:	9f 93       	push	r25
     442:	8f 93       	push	r24
     444:	58 d4       	rcall	.+2224   	; 0xcf6 <printf>
			for (int i=0; i<rxLen; i++) 
     446:	0f b6       	in	r0, 0x3f	; 63
     448:	f8 94       	cli
     44a:	de bf       	out	0x3e, r29	; 62
     44c:	0f be       	out	0x3f, r0	; 63
     44e:	cd bf       	out	0x3d, r28	; 61
     450:	10 16       	cp	r1, r16
     452:	11 06       	cpc	r1, r17
     454:	0c f0       	brlt	.+2      	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
     456:	3e c0       	rjmp	.+124    	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
     458:	09 e0       	ldi	r16, 0x09	; 9
     45a:	14 e0       	ldi	r17, 0x04	; 4
     45c:	8c 2d       	mov	r24, r12
     45e:	90 e0       	ldi	r25, 0x00	; 0
     460:	fc 01       	movw	r30, r24
     462:	e7 5f       	subi	r30, 0xF7	; 247
     464:	fb 4f       	sbci	r31, 0xFB	; 251
     466:	6f 01       	movw	r12, r30
				printf("%02x ", buffer[i]);
     468:	78 01       	movw	r14, r16
     46a:	0f 2e       	mov	r0, r31
     46c:	f2 ed       	ldi	r31, 0xD2	; 210
     46e:	af 2e       	mov	r10, r31
     470:	f2 e0       	ldi	r31, 0x02	; 2
     472:	bf 2e       	mov	r11, r31
     474:	f0 2d       	mov	r31, r0
     476:	f7 01       	movw	r30, r14
     478:	81 91       	ld	r24, Z+
     47a:	7f 01       	movw	r14, r30
     47c:	1f 92       	push	r1
     47e:	8f 93       	push	r24
     480:	bf 92       	push	r11
		  // printf("\"\n\r");
		}
		else { // read the RFA1 manual DOC8266 to understand the raw 802.15.4 fields: [header][data][crc][lqi]
			int rxLen=radio_raw_recv(&buffer[0], 128, &valid, &energy);
			printf("Radio rx. valid=%d energy=%d len=%d. Data=", valid, energy, rxLen);
			for (int i=0; i<rxLen; i++) 
     482:	af 92       	push	r10
     484:	38 d4       	rcall	.+2160   	; 0xcf6 <printf>
     486:	0f 90       	pop	r0
     488:	0f 90       	pop	r0
     48a:	0f 90       	pop	r0
     48c:	0f 90       	pop	r0
				printf("%02x ", buffer[i]);
			printf("=\"");
			for (int i=0; i<rxLen; i++) 
				if ((buffer[i]>=' ')&&(buffer[i]<='~'))
     48e:	ec 14       	cp	r14, r12
     490:	fd 04       	cpc	r15, r13
     492:	89 f7       	brne	.-30     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
     494:	27 c0       	rjmp	.+78     	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
     496:	f8 01       	movw	r30, r16
     498:	81 91       	ld	r24, Z+
     49a:	8f 01       	movw	r16, r30
					printf("%c", buffer[i]);
     49c:	90 ee       	ldi	r25, 0xE0	; 224
     49e:	98 0f       	add	r25, r24
     4a0:	9f 35       	cpi	r25, 0x5F	; 95
				else
					printf(".");
     4a2:	18 f4       	brcc	.+6      	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
     4a4:	90 e0       	ldi	r25, 0x00	; 0
     4a6:	3a d4       	rcall	.+2164   	; 0xd1c <putchar>
     4a8:	03 c0       	rjmp	.+6      	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
			int rxLen=radio_raw_recv(&buffer[0], 128, &valid, &energy);
			printf("Radio rx. valid=%d energy=%d len=%d. Data=", valid, energy, rxLen);
			for (int i=0; i<rxLen; i++) 
				printf("%02x ", buffer[i]);
			printf("=\"");
			for (int i=0; i<rxLen; i++) 
     4aa:	8e e2       	ldi	r24, 0x2E	; 46
     4ac:	90 e0       	ldi	r25, 0x00	; 0
				if ((buffer[i]>=' ')&&(buffer[i]<='~'))
					printf("%c", buffer[i]);
				else
					printf(".");
		   printf("\"\n\r");
     4ae:	36 d4       	rcall	.+2156   	; 0xd1c <putchar>
     4b0:	0c 15       	cp	r16, r12
     4b2:	1d 05       	cpc	r17, r13
     4b4:	81 f7       	brne	.-32     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
     4b6:	8f e6       	ldi	r24, 0x6F	; 111
     4b8:	93 e0       	ldi	r25, 0x03	; 3
   		   // Now echo the packet back in raw mode (subtract 3 bytes for CRC and lqi).
		   // Lqi is not part of the packet
		   // CRC is appended by the hardware - future option will be to disable this for raw_send()
		   //radio_raw_send(&buffer[0],rxLen-3);
		   printf("Echoed.\n\r");
     4ba:	9f 93       	push	r25
     4bc:	8f 93       	push	r24
     4be:	1b d4       	rcall	.+2102   	; 0xcf6 <printf>
     4c0:	83 e7       	ldi	r24, 0x73	; 115
     4c2:	93 e0       	ldi	r25, 0x03	; 3
     4c4:	9f 93       	push	r25
     4c6:	8f 93       	push	r24
     4c8:	16 d4       	rcall	.+2092   	; 0xcf6 <printf>
     4ca:	0f 90       	pop	r0
     4cc:	0f 90       	pop	r0
		}
   }
	   
}
     4ce:	0f 90       	pop	r0
		else { // read the RFA1 manual DOC8266 to understand the raw 802.15.4 fields: [header][data][crc][lqi]
			int rxLen=radio_raw_recv(&buffer[0], 128, &valid, &energy);
			printf("Radio rx. valid=%d energy=%d len=%d. Data=", valid, energy, rxLen);
			for (int i=0; i<rxLen; i++) 
				printf("%02x ", buffer[i]);
			printf("=\"");
     4d0:	0f 90       	pop	r0
     4d2:	10 c0       	rjmp	.+32     	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
     4d4:	8d e7       	ldi	r24, 0x7D	; 125
     4d6:	93 e0       	ldi	r25, 0x03	; 3
     4d8:	9f 93       	push	r25
     4da:	8f 93       	push	r24
     4dc:	0c d4       	rcall	.+2072   	; 0xcf6 <printf>
     4de:	0f 90       	pop	r0
     4e0:	0f 90       	pop	r0
     4e2:	e9 cf       	rjmp	.-46     	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
     4e4:	8d e7       	ldi	r24, 0x7D	; 125
     4e6:	93 e0       	ldi	r25, 0x03	; 3
     4e8:	9f 93       	push	r25
     4ea:	8f 93       	push	r24
     4ec:	04 d4       	rcall	.+2056   	; 0xcf6 <printf>
     4ee:	0f 90       	pop	r0
     4f0:	0f 90       	pop	r0
     4f2:	d1 cf       	rjmp	.-94     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
		   //radio_raw_send(&buffer[0],rxLen-3);
		   printf("Echoed.\n\r");
		}
   }
	   
}
     4f4:	27 96       	adiw	r28, 0x07	; 7
     4f6:	0f b6       	in	r0, 0x3f	; 63
     4f8:	f8 94       	cli
     4fa:	de bf       	out	0x3e, r29	; 62
     4fc:	0f be       	out	0x3f, r0	; 63
     4fe:	cd bf       	out	0x3d, r28	; 61
     500:	df 91       	pop	r29
     502:	cf 91       	pop	r28
     504:	1f 91       	pop	r17
     506:	0f 91       	pop	r16
     508:	ff 90       	pop	r15
     50a:	ef 90       	pop	r14
     50c:	df 90       	pop	r13
     50e:	cf 90       	pop	r12
     510:	bf 90       	pop	r11
     512:	af 90       	pop	r10
     514:	08 95       	ret

00000516 <button_init>:
     516:	6d 98       	cbi	0x0d, 5	; 13
     518:	75 9a       	sbi	0x0e, 5	; 14
     51a:	08 95       	ret

0000051c <button_pressed>:
     51c:	8c b1       	in	r24, 0x0c	; 12
     51e:	85 fb       	bst	r24, 5
     520:	88 27       	eor	r24, r24
     522:	80 f9       	bld	r24, 0
     524:	91 e0       	ldi	r25, 0x01	; 1
     526:	89 27       	eor	r24, r25
     528:	08 95       	ret

0000052a <main>:
     52a:	3e d0       	rcall	.+124    	; 0x5a8 <timer_init>
     52c:	80 e0       	ldi	r24, 0x00	; 0
     52e:	90 e0       	ldi	r25, 0x00	; 0
     530:	49 d0       	rcall	.+146    	; 0x5c4 <timer_start>
     532:	15 de       	rcall	.-982    	; 0x15e <init>
     534:	0f 2e       	mov	r0, r31
     536:	f0 e8       	ldi	r31, 0x80	; 128
     538:	cf 2e       	mov	r12, r31
     53a:	fe e3       	ldi	r31, 0x3E	; 62
     53c:	df 2e       	mov	r13, r31
     53e:	e1 2c       	mov	r14, r1
     540:	f1 2c       	mov	r15, r1
     542:	f0 2d       	mov	r31, r0
     544:	24 de       	rcall	.-952    	; 0x18e <loop>
     546:	49 d0       	rcall	.+146    	; 0x5da <timer_overflow>
     548:	88 23       	and	r24, r24
     54a:	89 f0       	breq	.+34     	; 0x56e <main+0x44>
     54c:	80 91 89 04 	lds	r24, 0x0489	; 0x800489 <cycles>
     550:	90 91 8a 04 	lds	r25, 0x048A	; 0x80048a <cycles+0x1>
     554:	a0 91 8b 04 	lds	r26, 0x048B	; 0x80048b <cycles+0x2>
     558:	b0 91 8c 04 	lds	r27, 0x048C	; 0x80048c <cycles+0x3>
     55c:	11 96       	adiw	r26, 0x01	; 1
     55e:	80 93 89 04 	sts	0x0489, r24	; 0x800489 <cycles>
     562:	90 93 8a 04 	sts	0x048A, r25	; 0x80048a <cycles+0x1>
     566:	a0 93 8b 04 	sts	0x048B, r26	; 0x80048b <cycles+0x2>
     56a:	b0 93 8c 04 	sts	0x048C, r27	; 0x80048c <cycles+0x3>
     56e:	40 d0       	rcall	.+128    	; 0x5f0 <timer_now>
     570:	40 91 89 04 	lds	r20, 0x0489	; 0x800489 <cycles>
     574:	50 91 8a 04 	lds	r21, 0x048A	; 0x80048a <cycles+0x1>
     578:	60 91 8b 04 	lds	r22, 0x048B	; 0x80048b <cycles+0x2>
     57c:	70 91 8c 04 	lds	r23, 0x048C	; 0x80048c <cycles+0x3>
     580:	8a 01       	movw	r16, r20
     582:	9b 01       	movw	r18, r22
     584:	08 0f       	add	r16, r24
     586:	19 1f       	adc	r17, r25
     588:	21 1d       	adc	r18, r1
     58a:	31 1d       	adc	r19, r1
     58c:	c9 01       	movw	r24, r18
     58e:	b8 01       	movw	r22, r16
     590:	a7 01       	movw	r20, r14
     592:	96 01       	movw	r18, r12
     594:	6f d3       	rcall	.+1758   	; 0xc74 <__udivmodsi4>
     596:	20 93 8d 04 	sts	0x048D, r18	; 0x80048d <time_millis_count>
     59a:	30 93 8e 04 	sts	0x048E, r19	; 0x80048e <time_millis_count+0x1>
     59e:	40 93 8f 04 	sts	0x048F, r20	; 0x80048f <time_millis_count+0x2>
     5a2:	50 93 90 04 	sts	0x0490, r21	; 0x800490 <time_millis_count+0x3>
     5a6:	ce cf       	rjmp	.-100    	; 0x544 <main+0x1a>

000005a8 <timer_init>:
     5a8:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
     5ac:	81 e0       	ldi	r24, 0x01	; 1
     5ae:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     5b2:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
     5b6:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     5ba:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     5be:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     5c2:	08 95       	ret

000005c4 <timer_start>:
     5c4:	cf 93       	push	r28
     5c6:	df 93       	push	r29
     5c8:	ec 01       	movw	r28, r24
     5ca:	ee df       	rcall	.-36     	; 0x5a8 <timer_init>
     5cc:	d0 93 85 00 	sts	0x0085, r29	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     5d0:	c0 93 84 00 	sts	0x0084, r28	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     5d4:	df 91       	pop	r29
     5d6:	cf 91       	pop	r28
     5d8:	08 95       	ret

000005da <timer_overflow>:
     5da:	96 b3       	in	r25, 0x16	; 22
     5dc:	81 e0       	ldi	r24, 0x01	; 1
     5de:	29 2f       	mov	r18, r25
     5e0:	21 70       	andi	r18, 0x01	; 1
     5e2:	90 ff       	sbrs	r25, 0
     5e4:	80 e0       	ldi	r24, 0x00	; 0
     5e6:	22 23       	and	r18, r18
     5e8:	11 f0       	breq	.+4      	; 0x5ee <timer_overflow+0x14>
     5ea:	91 e0       	ldi	r25, 0x01	; 1
     5ec:	96 bb       	out	0x16, r25	; 22
     5ee:	08 95       	ret

000005f0 <timer_now>:
     5f0:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     5f4:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     5f8:	08 95       	ret

000005fa <timer_wait_micro>:
     5fa:	8f 92       	push	r8
     5fc:	9f 92       	push	r9
     5fe:	af 92       	push	r10
     600:	bf 92       	push	r11
     602:	cf 92       	push	r12
     604:	df 92       	push	r13
     606:	ef 92       	push	r14
     608:	ff 92       	push	r15
     60a:	cf 93       	push	r28
     60c:	df 93       	push	r29
     60e:	4c 01       	movw	r8, r24
     610:	a1 2c       	mov	r10, r1
     612:	b1 2c       	mov	r11, r1
     614:	88 0c       	add	r8, r8
     616:	99 1c       	adc	r9, r9
     618:	aa 1c       	adc	r10, r10
     61a:	bb 1c       	adc	r11, r11
     61c:	88 0c       	add	r8, r8
     61e:	99 1c       	adc	r9, r9
     620:	aa 1c       	adc	r10, r10
     622:	bb 1c       	adc	r11, r11
     624:	88 0c       	add	r8, r8
     626:	99 1c       	adc	r9, r9
     628:	aa 1c       	adc	r10, r10
     62a:	bb 1c       	adc	r11, r11
     62c:	88 0c       	add	r8, r8
     62e:	99 1c       	adc	r9, r9
     630:	aa 1c       	adc	r10, r10
     632:	bb 1c       	adc	r11, r11
     634:	81 14       	cp	r8, r1
     636:	91 04       	cpc	r9, r1
     638:	81 e0       	ldi	r24, 0x01	; 1
     63a:	a8 06       	cpc	r10, r24
     63c:	b1 04       	cpc	r11, r1
     63e:	00 f1       	brcs	.+64     	; 0x680 <timer_wait_micro+0x86>
     640:	75 01       	movw	r14, r10
     642:	64 01       	movw	r12, r8
     644:	c4 e8       	ldi	r28, 0x84	; 132
     646:	d0 e0       	ldi	r29, 0x00	; 0
     648:	af df       	rcall	.-162    	; 0x5a8 <timer_init>
     64a:	19 82       	std	Y+1, r1	; 0x01
     64c:	18 82       	st	Y, r1
     64e:	81 e0       	ldi	r24, 0x01	; 1
     650:	e8 1a       	sub	r14, r24
     652:	f1 08       	sbc	r15, r1
     654:	c2 df       	rcall	.-124    	; 0x5da <timer_overflow>
     656:	88 23       	and	r24, r24
     658:	e9 f3       	breq	.-6      	; 0x654 <timer_wait_micro+0x5a>
     65a:	c1 14       	cp	r12, r1
     65c:	d1 04       	cpc	r13, r1
     65e:	81 e0       	ldi	r24, 0x01	; 1
     660:	e8 06       	cpc	r14, r24
     662:	f1 04       	cpc	r15, r1
     664:	88 f7       	brcc	.-30     	; 0x648 <timer_wait_micro+0x4e>
     666:	81 e0       	ldi	r24, 0x01	; 1
     668:	a8 1a       	sub	r10, r24
     66a:	b1 08       	sbc	r11, r1
     66c:	95 01       	movw	r18, r10
     66e:	44 27       	eor	r20, r20
     670:	55 27       	eor	r21, r21
     672:	a0 e0       	ldi	r26, 0x00	; 0
     674:	b0 e0       	ldi	r27, 0x00	; 0
     676:	22 d3       	rcall	.+1604   	; 0xcbc <__mulohisi3>
     678:	86 0e       	add	r8, r22
     67a:	97 1e       	adc	r9, r23
     67c:	a8 1e       	adc	r10, r24
     67e:	b9 1e       	adc	r11, r25
     680:	80 94       	com	r8
     682:	90 94       	com	r9
     684:	91 df       	rcall	.-222    	; 0x5a8 <timer_init>
     686:	90 92 85 00 	sts	0x0085, r9	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     68a:	80 92 84 00 	sts	0x0084, r8	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     68e:	a5 df       	rcall	.-182    	; 0x5da <timer_overflow>
     690:	88 23       	and	r24, r24
     692:	e9 f3       	breq	.-6      	; 0x68e <timer_wait_micro+0x94>
     694:	df 91       	pop	r29
     696:	cf 91       	pop	r28
     698:	ff 90       	pop	r15
     69a:	ef 90       	pop	r14
     69c:	df 90       	pop	r13
     69e:	cf 90       	pop	r12
     6a0:	bf 90       	pop	r11
     6a2:	af 90       	pop	r10
     6a4:	9f 90       	pop	r9
     6a6:	8f 90       	pop	r8
     6a8:	08 95       	ret

000006aa <timer_cpuf>:
     6aa:	60 e0       	ldi	r22, 0x00	; 0
     6ac:	74 e2       	ldi	r23, 0x24	; 36
     6ae:	84 ef       	ldi	r24, 0xF4	; 244
     6b0:	90 e0       	ldi	r25, 0x00	; 0
     6b2:	08 95       	ret

000006b4 <leds_init>:
     6b4:	6a 9a       	sbi	0x0d, 2	; 13
     6b6:	6b 9a       	sbi	0x0d, 3	; 13
     6b8:	6c 9a       	sbi	0x0d, 4	; 13
     6ba:	72 9a       	sbi	0x0e, 2	; 14
     6bc:	73 9a       	sbi	0x0e, 3	; 14
     6be:	74 9a       	sbi	0x0e, 4	; 14
     6c0:	08 95       	ret

000006c2 <leds_on>:
     6c2:	81 30       	cpi	r24, 0x01	; 1
     6c4:	11 f4       	brne	.+4      	; 0x6ca <leds_on+0x8>
     6c6:	72 98       	cbi	0x0e, 2	; 14
     6c8:	08 95       	ret
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	11 f4       	brne	.+4      	; 0x6d2 <leds_on+0x10>
     6ce:	73 98       	cbi	0x0e, 3	; 14
     6d0:	08 95       	ret
     6d2:	83 30       	cpi	r24, 0x03	; 3
     6d4:	09 f4       	brne	.+2      	; 0x6d8 <leds_on+0x16>
     6d6:	74 98       	cbi	0x0e, 4	; 14
     6d8:	08 95       	ret

000006da <leds_off>:
     6da:	81 30       	cpi	r24, 0x01	; 1
     6dc:	11 f4       	brne	.+4      	; 0x6e2 <leds_off+0x8>
     6de:	72 9a       	sbi	0x0e, 2	; 14
     6e0:	08 95       	ret
     6e2:	82 30       	cpi	r24, 0x02	; 2
     6e4:	11 f4       	brne	.+4      	; 0x6ea <leds_off+0x10>
     6e6:	73 9a       	sbi	0x0e, 3	; 14
     6e8:	08 95       	ret
     6ea:	83 30       	cpi	r24, 0x03	; 3
     6ec:	09 f4       	brne	.+2      	; 0x6f0 <leds_off+0x16>
     6ee:	74 9a       	sbi	0x0e, 4	; 14
     6f0:	08 95       	ret

000006f2 <radio_init>:
     6f2:	0f 93       	push	r16
     6f4:	1f 93       	push	r17
     6f6:	cf 93       	push	r28
     6f8:	df 93       	push	r29
     6fa:	d8 2f       	mov	r29, r24
     6fc:	c9 2f       	mov	r28, r25
     6fe:	09 e3       	ldi	r16, 0x39	; 57
     700:	11 e0       	ldi	r17, 0x01	; 1
     702:	f8 01       	movw	r30, r16
     704:	10 82       	st	Z, r1
     706:	86 e0       	ldi	r24, 0x06	; 6
     708:	90 e0       	ldi	r25, 0x00	; 0
     70a:	77 df       	rcall	.-274    	; 0x5fa <timer_wait_micro>
     70c:	81 e0       	ldi	r24, 0x01	; 1
     70e:	f8 01       	movw	r30, r16
     710:	80 83       	st	Z, r24
     712:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <__TEXT_REGION_LENGTH__+0x7e0141>
     716:	81 11       	cpse	r24, r1
     718:	08 c0       	rjmp	.+16     	; 0x72a <radio_init+0x38>
     71a:	88 e0       	ldi	r24, 0x08	; 8
     71c:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <__TEXT_REGION_LENGTH__+0x7e0142>
     720:	8e ef       	ldi	r24, 0xFE	; 254
     722:	91 e0       	ldi	r25, 0x01	; 1
     724:	6a df       	rcall	.-300    	; 0x5fa <timer_wait_micro>
     726:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <__TEXT_REGION_LENGTH__+0x7e0141>
     72a:	8b e0       	ldi	r24, 0x0B	; 11
     72c:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <__TEXT_REGION_LENGTH__+0x7e0148>
     730:	8f ef       	ldi	r24, 0xFF	; 255
     732:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <__TEXT_REGION_LENGTH__+0x7e014f>
     736:	d0 93 93 04 	sts	0x0493, r29	; 0x800493 <radio_macaddr>
     73a:	c0 93 94 04 	sts	0x0494, r28	; 0x800494 <radio_macaddr+0x1>
     73e:	d0 93 60 01 	sts	0x0160, r29	; 0x800160 <__TEXT_REGION_LENGTH__+0x7e0160>
     742:	c0 93 61 01 	sts	0x0161, r28	; 0x800161 <__TEXT_REGION_LENGTH__+0x7e0161>
     746:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <__TEXT_REGION_LENGTH__+0x7e0162>
     74a:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <__TEXT_REGION_LENGTH__+0x7e0163>
     74e:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <__TEXT_REGION_LENGTH__+0x7e0141>
     752:	df 91       	pop	r29
     754:	cf 91       	pop	r28
     756:	1f 91       	pop	r17
     758:	0f 91       	pop	r16
     75a:	08 95       	ret

0000075c <radio_start>:
     75c:	8f ef       	ldi	r24, 0xFF	; 255
     75e:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <__TEXT_REGION_LENGTH__+0x7e014f>
     762:	86 e0       	ldi	r24, 0x06	; 6
     764:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <__TEXT_REGION_LENGTH__+0x7e0142>
     768:	e1 e4       	ldi	r30, 0x41	; 65
     76a:	f1 e0       	ldi	r31, 0x01	; 1
     76c:	80 81       	ld	r24, Z
     76e:	8f 71       	andi	r24, 0x1F	; 31
     770:	86 30       	cpi	r24, 0x06	; 6
     772:	e1 f7       	brne	.-8      	; 0x76c <radio_start+0x10>
     774:	ec e4       	ldi	r30, 0x4C	; 76
     776:	f1 e0       	ldi	r31, 0x01	; 1
     778:	80 81       	ld	r24, Z
     77a:	80 68       	ori	r24, 0x80	; 128
     77c:	80 83       	st	Z, r24
     77e:	08 95       	ret

00000780 <radio_rxed>:
     780:	80 91 4f 01 	lds	r24, 0x014F	; 0x80014f <__TEXT_REGION_LENGTH__+0x7e014f>
     784:	83 fb       	bst	r24, 3
     786:	88 27       	eor	r24, r24
     788:	80 f9       	bld	r24, 0
     78a:	08 95       	ret

0000078c <radio_recv>:
     78c:	9f 92       	push	r9
     78e:	af 92       	push	r10
     790:	bf 92       	push	r11
     792:	cf 92       	push	r12
     794:	df 92       	push	r13
     796:	ef 92       	push	r14
     798:	ff 92       	push	r15
     79a:	0f 93       	push	r16
     79c:	1f 93       	push	r17
     79e:	cf 93       	push	r28
     7a0:	df 93       	push	r29
     7a2:	90 90 7b 01 	lds	r9, 0x017B	; 0x80017b <__TEXT_REGION_LENGTH__+0x7e017b>
     7a6:	7f ef       	ldi	r23, 0xFF	; 255
     7a8:	70 93 12 02 	sts	0x0212, r23	; 0x800212 <radio_maxRSSI>
     7ac:	ef e4       	ldi	r30, 0x4F	; 79
     7ae:	f1 e0       	ldi	r31, 0x01	; 1
     7b0:	70 81       	ld	r23, Z
     7b2:	72 ff       	sbrs	r23, 2
     7b4:	fd cf       	rjmp	.-6      	; 0x7b0 <radio_recv+0x24>
     7b6:	cf e4       	ldi	r28, 0x4F	; 79
     7b8:	d1 e0       	ldi	r29, 0x01	; 1
     7ba:	0f 2e       	mov	r0, r31
     7bc:	f6 e4       	ldi	r31, 0x46	; 70
     7be:	af 2e       	mov	r10, r31
     7c0:	bb 24       	eor	r11, r11
     7c2:	b3 94       	inc	r11
     7c4:	f0 2d       	mov	r31, r0
     7c6:	0d c0       	rjmp	.+26     	; 0x7e2 <radio_recv+0x56>
     7c8:	f5 01       	movw	r30, r10
     7ca:	70 81       	ld	r23, Z
     7cc:	e7 2f       	mov	r30, r23
     7ce:	ef 71       	andi	r30, 0x1F	; 31
     7d0:	f0 e0       	ldi	r31, 0x00	; 0
     7d2:	ae 17       	cp	r26, r30
     7d4:	bf 07       	cpc	r27, r31
     7d6:	44 f4       	brge	.+16     	; 0x7e8 <radio_recv+0x5c>
     7d8:	d5 01       	movw	r26, r10
     7da:	ec 91       	ld	r30, X
     7dc:	ef 71       	andi	r30, 0x1F	; 31
     7de:	e0 93 12 02 	sts	0x0212, r30	; 0x800212 <radio_maxRSSI>
     7e2:	a0 91 12 02 	lds	r26, 0x0212	; 0x800212 <radio_maxRSSI>
     7e6:	b0 e0       	ldi	r27, 0x00	; 0
     7e8:	78 81       	ld	r23, Y
     7ea:	73 ff       	sbrs	r23, 3
     7ec:	ed cf       	rjmp	.-38     	; 0x7c8 <radio_recv+0x3c>
     7ee:	75 ef       	ldi	r23, 0xF5	; 245
     7f0:	79 0d       	add	r23, r9
     7f2:	67 17       	cp	r22, r23
     7f4:	08 f4       	brcc	.+2      	; 0x7f8 <radio_recv+0x6c>
     7f6:	76 2f       	mov	r23, r22
     7f8:	e0 91 85 01 	lds	r30, 0x0185	; 0x800185 <__TEXT_REGION_LENGTH__+0x7e0185>
     7fc:	f0 e0       	ldi	r31, 0x00	; 0
     7fe:	fe 2f       	mov	r31, r30
     800:	ee 27       	eor	r30, r30
     802:	60 91 86 01 	lds	r22, 0x0186	; 0x800186 <__TEXT_REGION_LENGTH__+0x7e0186>
     806:	e6 2b       	or	r30, r22
     808:	da 01       	movw	r26, r20
     80a:	ed 93       	st	X+, r30
     80c:	fc 93       	st	X, r31
     80e:	40 91 89 01 	lds	r20, 0x0189	; 0x800189 <__TEXT_REGION_LENGTH__+0x7e0189>
     812:	50 e0       	ldi	r21, 0x00	; 0
     814:	54 2f       	mov	r21, r20
     816:	44 27       	eor	r20, r20
     818:	60 91 8a 01 	lds	r22, 0x018A	; 0x80018a <__TEXT_REGION_LENGTH__+0x7e018a>
     81c:	46 2b       	or	r20, r22
     81e:	f9 01       	movw	r30, r18
     820:	51 83       	std	Z+1, r21	; 0x01
     822:	40 83       	st	Z, r20
     824:	77 23       	and	r23, r23
     826:	99 f0       	breq	.+38     	; 0x84e <radio_recv+0xc2>
     828:	a8 2f       	mov	r26, r24
     82a:	b9 2f       	mov	r27, r25
     82c:	4f ef       	ldi	r20, 0xFF	; 255
     82e:	47 0f       	add	r20, r23
     830:	50 e0       	ldi	r21, 0x00	; 0
     832:	9a 01       	movw	r18, r20
     834:	24 57       	subi	r18, 0x74	; 116
     836:	3e 4f       	sbci	r19, 0xFE	; 254
     838:	eb e8       	ldi	r30, 0x8B	; 139
     83a:	f1 e0       	ldi	r31, 0x01	; 1
     83c:	91 91       	ld	r25, Z+
     83e:	9d 93       	st	X+, r25
     840:	e2 17       	cp	r30, r18
     842:	f3 07       	cpc	r31, r19
     844:	d9 f7       	brne	.-10     	; 0x83c <radio_recv+0xb0>
     846:	fa 01       	movw	r30, r20
     848:	e4 57       	subi	r30, 0x74	; 116
     84a:	fe 4f       	sbci	r31, 0xFE	; 254
     84c:	02 c0       	rjmp	.+4      	; 0x852 <radio_recv+0xc6>
     84e:	eb e8       	ldi	r30, 0x8B	; 139
     850:	f1 e0       	ldi	r31, 0x01	; 1
     852:	80 81       	ld	r24, Z
     854:	80 93 91 04 	sts	0x0491, r24	; 0x800491 <radio_lqi>
     858:	d6 01       	movw	r26, r12
     85a:	8c 93       	st	X, r24
     85c:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <__TEXT_REGION_LENGTH__+0x7e0147>
     860:	80 93 92 04 	sts	0x0492, r24	; 0x800492 <radio_energy>
     864:	f7 01       	movw	r30, r14
     866:	80 83       	st	Z, r24
     868:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <__TEXT_REGION_LENGTH__+0x7e0146>
     86c:	88 1f       	adc	r24, r24
     86e:	88 27       	eor	r24, r24
     870:	88 1f       	adc	r24, r24
     872:	d8 01       	movw	r26, r16
     874:	8c 93       	st	X, r24
     876:	e1 e4       	ldi	r30, 0x41	; 65
     878:	f1 e0       	ldi	r31, 0x01	; 1
     87a:	90 81       	ld	r25, Z
     87c:	9f 71       	andi	r25, 0x1F	; 31
     87e:	96 30       	cpi	r25, 0x06	; 6
     880:	e1 f7       	brne	.-8      	; 0x87a <radio_recv+0xee>
     882:	ec e4       	ldi	r30, 0x4C	; 76
     884:	f1 e0       	ldi	r31, 0x01	; 1
     886:	80 81       	ld	r24, Z
     888:	8f 77       	andi	r24, 0x7F	; 127
     88a:	80 83       	st	Z, r24
     88c:	80 81       	ld	r24, Z
     88e:	80 68       	ori	r24, 0x80	; 128
     890:	80 83       	st	Z, r24
     892:	8f ef       	ldi	r24, 0xFF	; 255
     894:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <__TEXT_REGION_LENGTH__+0x7e014f>
     898:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <__TEXT_REGION_LENGTH__+0x7e0141>
     89c:	8e ef       	ldi	r24, 0xFE	; 254
     89e:	87 0f       	add	r24, r23
     8a0:	df 91       	pop	r29
     8a2:	cf 91       	pop	r28
     8a4:	1f 91       	pop	r17
     8a6:	0f 91       	pop	r16
     8a8:	ff 90       	pop	r15
     8aa:	ef 90       	pop	r14
     8ac:	df 90       	pop	r13
     8ae:	cf 90       	pop	r12
     8b0:	bf 90       	pop	r11
     8b2:	af 90       	pop	r10
     8b4:	9f 90       	pop	r9
     8b6:	08 95       	ret

000008b8 <radio_raw_recv>:
     8b8:	ef 92       	push	r14
     8ba:	ff 92       	push	r15
     8bc:	0f 93       	push	r16
     8be:	1f 93       	push	r17
     8c0:	cf 93       	push	r28
     8c2:	df 93       	push	r29
     8c4:	78 2f       	mov	r23, r24
     8c6:	79 01       	movw	r14, r18
     8c8:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <__TEXT_REGION_LENGTH__+0x7e017b>
     8cc:	2f ef       	ldi	r18, 0xFF	; 255
     8ce:	20 93 12 02 	sts	0x0212, r18	; 0x800212 <radio_maxRSSI>
     8d2:	ef e4       	ldi	r30, 0x4F	; 79
     8d4:	f1 e0       	ldi	r31, 0x01	; 1
     8d6:	30 81       	ld	r19, Z
     8d8:	32 ff       	sbrs	r19, 2
     8da:	fd cf       	rjmp	.-6      	; 0x8d6 <radio_raw_recv+0x1e>
     8dc:	0f e4       	ldi	r16, 0x4F	; 79
     8de:	11 e0       	ldi	r17, 0x01	; 1
     8e0:	c6 e4       	ldi	r28, 0x46	; 70
     8e2:	d1 e0       	ldi	r29, 0x01	; 1
     8e4:	0a c0       	rjmp	.+20     	; 0x8fa <radio_raw_recv+0x42>
     8e6:	e8 81       	ld	r30, Y
     8e8:	ef 71       	andi	r30, 0x1F	; 31
     8ea:	f0 e0       	ldi	r31, 0x00	; 0
     8ec:	ae 17       	cp	r26, r30
     8ee:	bf 07       	cpc	r27, r31
     8f0:	3c f4       	brge	.+14     	; 0x900 <radio_raw_recv+0x48>
     8f2:	28 81       	ld	r18, Y
     8f4:	2f 71       	andi	r18, 0x1F	; 31
     8f6:	20 93 12 02 	sts	0x0212, r18	; 0x800212 <radio_maxRSSI>
     8fa:	a0 91 12 02 	lds	r26, 0x0212	; 0x800212 <radio_maxRSSI>
     8fe:	b0 e0       	ldi	r27, 0x00	; 0
     900:	f8 01       	movw	r30, r16
     902:	30 81       	ld	r19, Z
     904:	33 ff       	sbrs	r19, 3
     906:	ef cf       	rjmp	.-34     	; 0x8e6 <radio_raw_recv+0x2e>
     908:	8f 5f       	subi	r24, 0xFF	; 255
     90a:	68 17       	cp	r22, r24
     90c:	08 f4       	brcc	.+2      	; 0x910 <radio_raw_recv+0x58>
     90e:	86 2f       	mov	r24, r22
     910:	88 23       	and	r24, r24
     912:	71 f0       	breq	.+28     	; 0x930 <radio_raw_recv+0x78>
     914:	a7 2f       	mov	r26, r23
     916:	b9 2f       	mov	r27, r25
     918:	6f ef       	ldi	r22, 0xFF	; 255
     91a:	68 0f       	add	r22, r24
     91c:	70 e0       	ldi	r23, 0x00	; 0
     91e:	6f 57       	subi	r22, 0x7F	; 127
     920:	7e 4f       	sbci	r23, 0xFE	; 254
     922:	e0 e8       	ldi	r30, 0x80	; 128
     924:	f1 e0       	ldi	r31, 0x01	; 1
     926:	91 91       	ld	r25, Z+
     928:	9d 93       	st	X+, r25
     92a:	e6 17       	cp	r30, r22
     92c:	f7 07       	cpc	r31, r23
     92e:	d9 f7       	brne	.-10     	; 0x926 <radio_raw_recv+0x6e>
     930:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <__TEXT_REGION_LENGTH__+0x7e0147>
     934:	90 93 92 04 	sts	0x0492, r25	; 0x800492 <radio_energy>
     938:	f7 01       	movw	r30, r14
     93a:	90 83       	st	Z, r25
     93c:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <__TEXT_REGION_LENGTH__+0x7e0146>
     940:	99 1f       	adc	r25, r25
     942:	99 27       	eor	r25, r25
     944:	99 1f       	adc	r25, r25
     946:	fa 01       	movw	r30, r20
     948:	90 83       	st	Z, r25
     94a:	e1 e4       	ldi	r30, 0x41	; 65
     94c:	f1 e0       	ldi	r31, 0x01	; 1
     94e:	90 81       	ld	r25, Z
     950:	9f 71       	andi	r25, 0x1F	; 31
     952:	96 30       	cpi	r25, 0x06	; 6
     954:	e1 f7       	brne	.-8      	; 0x94e <radio_raw_recv+0x96>
     956:	ec e4       	ldi	r30, 0x4C	; 76
     958:	f1 e0       	ldi	r31, 0x01	; 1
     95a:	90 81       	ld	r25, Z
     95c:	9f 77       	andi	r25, 0x7F	; 127
     95e:	90 83       	st	Z, r25
     960:	90 81       	ld	r25, Z
     962:	90 68       	ori	r25, 0x80	; 128
     964:	90 83       	st	Z, r25
     966:	9f ef       	ldi	r25, 0xFF	; 255
     968:	90 93 4f 01 	sts	0x014F, r25	; 0x80014f <__TEXT_REGION_LENGTH__+0x7e014f>
     96c:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <__TEXT_REGION_LENGTH__+0x7e0141>
     970:	df 91       	pop	r29
     972:	cf 91       	pop	r28
     974:	1f 91       	pop	r17
     976:	0f 91       	pop	r16
     978:	ff 90       	pop	r15
     97a:	ef 90       	pop	r14
     97c:	08 95       	ret

0000097e <serial_init>:
     97e:	4f 92       	push	r4
     980:	5f 92       	push	r5
     982:	6f 92       	push	r6
     984:	7f 92       	push	r7
     986:	8f 92       	push	r8
     988:	9f 92       	push	r9
     98a:	af 92       	push	r10
     98c:	bf 92       	push	r11
     98e:	cf 92       	push	r12
     990:	df 92       	push	r13
     992:	ef 92       	push	r14
     994:	ff 92       	push	r15
     996:	2b 01       	movw	r4, r22
     998:	3c 01       	movw	r6, r24
     99a:	87 de       	rcall	.-754    	; 0x6aa <timer_cpuf>
     99c:	6b 01       	movw	r12, r22
     99e:	7c 01       	movw	r14, r24
     9a0:	68 94       	set
     9a2:	13 f8       	bld	r1, 3
     9a4:	f6 94       	lsr	r15
     9a6:	e7 94       	ror	r14
     9a8:	d7 94       	ror	r13
     9aa:	c7 94       	ror	r12
     9ac:	16 94       	lsr	r1
     9ae:	d1 f7       	brne	.-12     	; 0x9a4 <serial_init+0x26>
     9b0:	0f 2e       	mov	r0, r31
     9b2:	fa e0       	ldi	r31, 0x0A	; 10
     9b4:	8f 2e       	mov	r8, r31
     9b6:	91 2c       	mov	r9, r1
     9b8:	a1 2c       	mov	r10, r1
     9ba:	b1 2c       	mov	r11, r1
     9bc:	f0 2d       	mov	r31, r0
     9be:	c3 01       	movw	r24, r6
     9c0:	b2 01       	movw	r22, r4
     9c2:	a5 01       	movw	r20, r10
     9c4:	94 01       	movw	r18, r8
     9c6:	56 d1       	rcall	.+684    	; 0xc74 <__udivmodsi4>
     9c8:	c7 01       	movw	r24, r14
     9ca:	b6 01       	movw	r22, r12
     9cc:	53 d1       	rcall	.+678    	; 0xc74 <__udivmodsi4>
     9ce:	ca 01       	movw	r24, r20
     9d0:	b9 01       	movw	r22, r18
     9d2:	6b 5f       	subi	r22, 0xFB	; 251
     9d4:	7f 4f       	sbci	r23, 0xFF	; 255
     9d6:	8f 4f       	sbci	r24, 0xFF	; 255
     9d8:	9f 4f       	sbci	r25, 0xFF	; 255
     9da:	a5 01       	movw	r20, r10
     9dc:	94 01       	movw	r18, r8
     9de:	4a d1       	rcall	.+660    	; 0xc74 <__udivmodsi4>
     9e0:	ba 01       	movw	r22, r20
     9e2:	a9 01       	movw	r20, r18
     9e4:	41 50       	subi	r20, 0x01	; 1
     9e6:	51 09       	sbc	r21, r1
     9e8:	61 09       	sbc	r22, r1
     9ea:	71 09       	sbc	r23, r1
     9ec:	e1 ec       	ldi	r30, 0xC1	; 193
     9ee:	f0 e0       	ldi	r31, 0x00	; 0
     9f0:	10 82       	st	Z, r1
     9f2:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     9f6:	86 e0       	ldi	r24, 0x06	; 6
     9f8:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
     9fc:	85 2f       	mov	r24, r21
     9fe:	8f 70       	andi	r24, 0x0F	; 15
     a00:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     a04:	40 93 c4 00 	sts	0x00C4, r20	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     a08:	88 e1       	ldi	r24, 0x18	; 24
     a0a:	80 83       	st	Z, r24
     a0c:	e6 eb       	ldi	r30, 0xB6	; 182
     a0e:	f4 e0       	ldi	r31, 0x04	; 4
     a10:	83 e1       	ldi	r24, 0x13	; 19
     a12:	92 e0       	ldi	r25, 0x02	; 2
     a14:	93 83       	std	Z+3, r25	; 0x03
     a16:	82 83       	std	Z+2, r24	; 0x02
     a18:	91 83       	std	Z+1, r25	; 0x01
     a1a:	80 83       	st	Z, r24
     a1c:	95 83       	std	Z+5, r25	; 0x05
     a1e:	84 83       	std	Z+4, r24	; 0x04
     a20:	81 e0       	ldi	r24, 0x01	; 1
     a22:	80 93 95 04 	sts	0x0495, r24	; 0x800495 <serial_initialised>
     a26:	ff 90       	pop	r15
     a28:	ef 90       	pop	r14
     a2a:	df 90       	pop	r13
     a2c:	cf 90       	pop	r12
     a2e:	bf 90       	pop	r11
     a30:	af 90       	pop	r10
     a32:	9f 90       	pop	r9
     a34:	8f 90       	pop	r8
     a36:	7f 90       	pop	r7
     a38:	6f 90       	pop	r6
     a3a:	5f 90       	pop	r5
     a3c:	4f 90       	pop	r4
     a3e:	08 95       	ret

00000a40 <serial_put>:
     a40:	e0 ec       	ldi	r30, 0xC0	; 192
     a42:	f0 e0       	ldi	r31, 0x00	; 0
     a44:	90 81       	ld	r25, Z
     a46:	95 ff       	sbrs	r25, 5
     a48:	fd cf       	rjmp	.-6      	; 0xa44 <serial_put+0x4>
     a4a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     a4e:	08 95       	ret

00000a50 <write>:
     a50:	cf 93       	push	r28
     a52:	c8 2f       	mov	r28, r24
     a54:	f5 df       	rcall	.-22     	; 0xa40 <serial_put>
     a56:	8c 2f       	mov	r24, r28
     a58:	90 e0       	ldi	r25, 0x00	; 0
     a5a:	cf 91       	pop	r28
     a5c:	08 95       	ret

00000a5e <serial_puts>:
     a5e:	cf 93       	push	r28
     a60:	df 93       	push	r29
     a62:	ec 01       	movw	r28, r24
     a64:	88 81       	ld	r24, Y
     a66:	88 23       	and	r24, r24
     a68:	29 f0       	breq	.+10     	; 0xa74 <serial_puts+0x16>
     a6a:	21 96       	adiw	r28, 0x01	; 1
     a6c:	e9 df       	rcall	.-46     	; 0xa40 <serial_put>
     a6e:	89 91       	ld	r24, Y+
     a70:	81 11       	cpse	r24, r1
     a72:	fc cf       	rjmp	.-8      	; 0xa6c <serial_puts+0xe>
     a74:	df 91       	pop	r29
     a76:	cf 91       	pop	r28
     a78:	08 95       	ret

00000a7a <serial_get>:
     a7a:	e0 ec       	ldi	r30, 0xC0	; 192
     a7c:	f0 e0       	ldi	r31, 0x00	; 0
     a7e:	80 81       	ld	r24, Z
     a80:	88 23       	and	r24, r24
     a82:	ec f7       	brge	.-6      	; 0xa7e <serial_get+0x4>
     a84:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     a88:	08 95       	ret

00000a8a <read>:
     a8a:	cf 93       	push	r28
     a8c:	f6 df       	rcall	.-20     	; 0xa7a <serial_get>
     a8e:	c8 2f       	mov	r28, r24
     a90:	d7 df       	rcall	.-82     	; 0xa40 <serial_put>
     a92:	8c 2f       	mov	r24, r28
     a94:	90 e0       	ldi	r25, 0x00	; 0
     a96:	cf 91       	pop	r28
     a98:	08 95       	ret

00000a9a <crypto_init>:
     a9a:	cf 93       	push	r28
     a9c:	df 93       	push	r29
     a9e:	00 d0       	rcall	.+0      	; 0xaa0 <crypto_init+0x6>
     aa0:	00 d0       	rcall	.+0      	; 0xaa2 <crypto_init+0x8>
     aa2:	1f 92       	push	r1
     aa4:	cd b7       	in	r28, 0x3d	; 61
     aa6:	de b7       	in	r29, 0x3e	; 62
     aa8:	9d 83       	std	Y+5, r25	; 0x05
     aaa:	8c 83       	std	Y+4, r24	; 0x04
     aac:	8c e3       	ldi	r24, 0x3C	; 60
     aae:	91 e0       	ldi	r25, 0x01	; 1
     ab0:	fc 01       	movw	r30, r24
     ab2:	80 81       	ld	r24, Z
     ab4:	8b 83       	std	Y+3, r24	; 0x03
     ab6:	1a 82       	std	Y+2, r1	; 0x02
     ab8:	19 82       	std	Y+1, r1	; 0x01
     aba:	1d c0       	rjmp	.+58     	; 0xaf6 <crypto_init+0x5c>
     abc:	89 81       	ldd	r24, Y+1	; 0x01
     abe:	9a 81       	ldd	r25, Y+2	; 0x02
     ac0:	2c 81       	ldd	r18, Y+4	; 0x04
     ac2:	3d 81       	ldd	r19, Y+5	; 0x05
     ac4:	82 0f       	add	r24, r18
     ac6:	93 1f       	adc	r25, r19
     ac8:	fc 01       	movw	r30, r24
     aca:	20 81       	ld	r18, Z
     acc:	89 81       	ldd	r24, Y+1	; 0x01
     ace:	9a 81       	ldd	r25, Y+2	; 0x02
     ad0:	8a 56       	subi	r24, 0x6A	; 106
     ad2:	9b 4f       	sbci	r25, 0xFB	; 251
     ad4:	fc 01       	movw	r30, r24
     ad6:	20 83       	st	Z, r18
     ad8:	8f e3       	ldi	r24, 0x3F	; 63
     ada:	91 e0       	ldi	r25, 0x01	; 1
     adc:	29 81       	ldd	r18, Y+1	; 0x01
     ade:	3a 81       	ldd	r19, Y+2	; 0x02
     ae0:	2a 56       	subi	r18, 0x6A	; 106
     ae2:	3b 4f       	sbci	r19, 0xFB	; 251
     ae4:	f9 01       	movw	r30, r18
     ae6:	20 81       	ld	r18, Z
     ae8:	fc 01       	movw	r30, r24
     aea:	20 83       	st	Z, r18
     aec:	89 81       	ldd	r24, Y+1	; 0x01
     aee:	9a 81       	ldd	r25, Y+2	; 0x02
     af0:	01 96       	adiw	r24, 0x01	; 1
     af2:	9a 83       	std	Y+2, r25	; 0x02
     af4:	89 83       	std	Y+1, r24	; 0x01
     af6:	89 81       	ldd	r24, Y+1	; 0x01
     af8:	9a 81       	ldd	r25, Y+2	; 0x02
     afa:	40 97       	sbiw	r24, 0x10	; 16
     afc:	fc f2       	brlt	.-66     	; 0xabc <crypto_init+0x22>
     afe:	8c e3       	ldi	r24, 0x3C	; 60
     b00:	91 e0       	ldi	r25, 0x01	; 1
     b02:	fc 01       	movw	r30, r24
     b04:	10 82       	st	Z, r1
     b06:	1a 82       	std	Y+2, r1	; 0x02
     b08:	19 82       	std	Y+1, r1	; 0x01
     b0a:	09 c0       	rjmp	.+18     	; 0xb1e <crypto_init+0x84>
     b0c:	8e e3       	ldi	r24, 0x3E	; 62
     b0e:	91 e0       	ldi	r25, 0x01	; 1
     b10:	fc 01       	movw	r30, r24
     b12:	10 82       	st	Z, r1
     b14:	89 81       	ldd	r24, Y+1	; 0x01
     b16:	9a 81       	ldd	r25, Y+2	; 0x02
     b18:	01 96       	adiw	r24, 0x01	; 1
     b1a:	9a 83       	std	Y+2, r25	; 0x02
     b1c:	89 83       	std	Y+1, r24	; 0x01
     b1e:	89 81       	ldd	r24, Y+1	; 0x01
     b20:	9a 81       	ldd	r25, Y+2	; 0x02
     b22:	40 97       	sbiw	r24, 0x10	; 16
     b24:	9c f3       	brlt	.-26     	; 0xb0c <crypto_init+0x72>
     b26:	8c e3       	ldi	r24, 0x3C	; 60
     b28:	91 e0       	ldi	r25, 0x01	; 1
     b2a:	20 e8       	ldi	r18, 0x80	; 128
     b2c:	fc 01       	movw	r30, r24
     b2e:	20 83       	st	Z, r18
     b30:	00 00       	nop
     b32:	8d e3       	ldi	r24, 0x3D	; 61
     b34:	91 e0       	ldi	r25, 0x01	; 1
     b36:	fc 01       	movw	r30, r24
     b38:	80 81       	ld	r24, Z
     b3a:	81 70       	andi	r24, 0x01	; 1
     b3c:	88 23       	and	r24, r24
     b3e:	c9 f3       	breq	.-14     	; 0xb32 <crypto_init+0x98>
     b40:	80 e2       	ldi	r24, 0x20	; 32
     b42:	90 e0       	ldi	r25, 0x00	; 0
     b44:	5a dd       	rcall	.-1356   	; 0x5fa <timer_wait_micro>
     b46:	1a 82       	std	Y+2, r1	; 0x02
     b48:	19 82       	std	Y+1, r1	; 0x01
     b4a:	0f c0       	rjmp	.+30     	; 0xb6a <crypto_init+0xd0>
     b4c:	8f e3       	ldi	r24, 0x3F	; 63
     b4e:	91 e0       	ldi	r25, 0x01	; 1
     b50:	fc 01       	movw	r30, r24
     b52:	20 81       	ld	r18, Z
     b54:	89 81       	ldd	r24, Y+1	; 0x01
     b56:	9a 81       	ldd	r25, Y+2	; 0x02
     b58:	8a 55       	subi	r24, 0x5A	; 90
     b5a:	9b 4f       	sbci	r25, 0xFB	; 251
     b5c:	fc 01       	movw	r30, r24
     b5e:	20 83       	st	Z, r18
     b60:	89 81       	ldd	r24, Y+1	; 0x01
     b62:	9a 81       	ldd	r25, Y+2	; 0x02
     b64:	01 96       	adiw	r24, 0x01	; 1
     b66:	9a 83       	std	Y+2, r25	; 0x02
     b68:	89 83       	std	Y+1, r24	; 0x01
     b6a:	89 81       	ldd	r24, Y+1	; 0x01
     b6c:	9a 81       	ldd	r25, Y+2	; 0x02
     b6e:	40 97       	sbiw	r24, 0x10	; 16
     b70:	6c f3       	brlt	.-38     	; 0xb4c <crypto_init+0xb2>
     b72:	00 00       	nop
     b74:	0f 90       	pop	r0
     b76:	0f 90       	pop	r0
     b78:	0f 90       	pop	r0
     b7a:	0f 90       	pop	r0
     b7c:	0f 90       	pop	r0
     b7e:	df 91       	pop	r29
     b80:	cf 91       	pop	r28
     b82:	08 95       	ret

00000b84 <crypto_decrypt>:
     b84:	cf 93       	push	r28
     b86:	df 93       	push	r29
     b88:	cd b7       	in	r28, 0x3d	; 61
     b8a:	de b7       	in	r29, 0x3e	; 62
     b8c:	27 97       	sbiw	r28, 0x07	; 7
     b8e:	0f b6       	in	r0, 0x3f	; 63
     b90:	f8 94       	cli
     b92:	de bf       	out	0x3e, r29	; 62
     b94:	0f be       	out	0x3f, r0	; 63
     b96:	cd bf       	out	0x3d, r28	; 61
     b98:	9d 83       	std	Y+5, r25	; 0x05
     b9a:	8c 83       	std	Y+4, r24	; 0x04
     b9c:	7f 83       	std	Y+7, r23	; 0x07
     b9e:	6e 83       	std	Y+6, r22	; 0x06
     ba0:	8c e3       	ldi	r24, 0x3C	; 60
     ba2:	91 e0       	ldi	r25, 0x01	; 1
     ba4:	fc 01       	movw	r30, r24
     ba6:	80 81       	ld	r24, Z
     ba8:	8b 83       	std	Y+3, r24	; 0x03
     baa:	1a 82       	std	Y+2, r1	; 0x02
     bac:	19 82       	std	Y+1, r1	; 0x01
     bae:	0f c0       	rjmp	.+30     	; 0xbce <crypto_decrypt+0x4a>
     bb0:	8f e3       	ldi	r24, 0x3F	; 63
     bb2:	91 e0       	ldi	r25, 0x01	; 1
     bb4:	29 81       	ldd	r18, Y+1	; 0x01
     bb6:	3a 81       	ldd	r19, Y+2	; 0x02
     bb8:	2a 55       	subi	r18, 0x5A	; 90
     bba:	3b 4f       	sbci	r19, 0xFB	; 251
     bbc:	f9 01       	movw	r30, r18
     bbe:	20 81       	ld	r18, Z
     bc0:	fc 01       	movw	r30, r24
     bc2:	20 83       	st	Z, r18
     bc4:	89 81       	ldd	r24, Y+1	; 0x01
     bc6:	9a 81       	ldd	r25, Y+2	; 0x02
     bc8:	01 96       	adiw	r24, 0x01	; 1
     bca:	9a 83       	std	Y+2, r25	; 0x02
     bcc:	89 83       	std	Y+1, r24	; 0x01
     bce:	89 81       	ldd	r24, Y+1	; 0x01
     bd0:	9a 81       	ldd	r25, Y+2	; 0x02
     bd2:	40 97       	sbiw	r24, 0x10	; 16
     bd4:	6c f3       	brlt	.-38     	; 0xbb0 <crypto_decrypt+0x2c>
     bd6:	8c e3       	ldi	r24, 0x3C	; 60
     bd8:	91 e0       	ldi	r25, 0x01	; 1
     bda:	28 e0       	ldi	r18, 0x08	; 8
     bdc:	fc 01       	movw	r30, r24
     bde:	20 83       	st	Z, r18
     be0:	1a 82       	std	Y+2, r1	; 0x02
     be2:	19 82       	std	Y+1, r1	; 0x01
     be4:	11 c0       	rjmp	.+34     	; 0xc08 <crypto_decrypt+0x84>
     be6:	8e e3       	ldi	r24, 0x3E	; 62
     be8:	91 e0       	ldi	r25, 0x01	; 1
     bea:	29 81       	ldd	r18, Y+1	; 0x01
     bec:	3a 81       	ldd	r19, Y+2	; 0x02
     bee:	4c 81       	ldd	r20, Y+4	; 0x04
     bf0:	5d 81       	ldd	r21, Y+5	; 0x05
     bf2:	24 0f       	add	r18, r20
     bf4:	35 1f       	adc	r19, r21
     bf6:	f9 01       	movw	r30, r18
     bf8:	20 81       	ld	r18, Z
     bfa:	fc 01       	movw	r30, r24
     bfc:	20 83       	st	Z, r18
     bfe:	89 81       	ldd	r24, Y+1	; 0x01
     c00:	9a 81       	ldd	r25, Y+2	; 0x02
     c02:	01 96       	adiw	r24, 0x01	; 1
     c04:	9a 83       	std	Y+2, r25	; 0x02
     c06:	89 83       	std	Y+1, r24	; 0x01
     c08:	89 81       	ldd	r24, Y+1	; 0x01
     c0a:	9a 81       	ldd	r25, Y+2	; 0x02
     c0c:	40 97       	sbiw	r24, 0x10	; 16
     c0e:	5c f3       	brlt	.-42     	; 0xbe6 <crypto_decrypt+0x62>
     c10:	8c e3       	ldi	r24, 0x3C	; 60
     c12:	91 e0       	ldi	r25, 0x01	; 1
     c14:	28 e8       	ldi	r18, 0x88	; 136
     c16:	fc 01       	movw	r30, r24
     c18:	20 83       	st	Z, r18
     c1a:	00 00       	nop
     c1c:	8d e3       	ldi	r24, 0x3D	; 61
     c1e:	91 e0       	ldi	r25, 0x01	; 1
     c20:	fc 01       	movw	r30, r24
     c22:	80 81       	ld	r24, Z
     c24:	81 70       	andi	r24, 0x01	; 1
     c26:	88 23       	and	r24, r24
     c28:	c9 f3       	breq	.-14     	; 0xc1c <crypto_decrypt+0x98>
     c2a:	1a 82       	std	Y+2, r1	; 0x02
     c2c:	19 82       	std	Y+1, r1	; 0x01
     c2e:	11 c0       	rjmp	.+34     	; 0xc52 <crypto_decrypt+0xce>
     c30:	89 81       	ldd	r24, Y+1	; 0x01
     c32:	9a 81       	ldd	r25, Y+2	; 0x02
     c34:	2e 81       	ldd	r18, Y+6	; 0x06
     c36:	3f 81       	ldd	r19, Y+7	; 0x07
     c38:	82 0f       	add	r24, r18
     c3a:	93 1f       	adc	r25, r19
     c3c:	2e e3       	ldi	r18, 0x3E	; 62
     c3e:	31 e0       	ldi	r19, 0x01	; 1
     c40:	f9 01       	movw	r30, r18
     c42:	20 81       	ld	r18, Z
     c44:	fc 01       	movw	r30, r24
     c46:	20 83       	st	Z, r18
     c48:	89 81       	ldd	r24, Y+1	; 0x01
     c4a:	9a 81       	ldd	r25, Y+2	; 0x02
     c4c:	01 96       	adiw	r24, 0x01	; 1
     c4e:	9a 83       	std	Y+2, r25	; 0x02
     c50:	89 83       	std	Y+1, r24	; 0x01
     c52:	89 81       	ldd	r24, Y+1	; 0x01
     c54:	9a 81       	ldd	r25, Y+2	; 0x02
     c56:	40 97       	sbiw	r24, 0x10	; 16
     c58:	5c f3       	brlt	.-42     	; 0xc30 <crypto_decrypt+0xac>
     c5a:	8d e3       	ldi	r24, 0x3D	; 61
     c5c:	91 e0       	ldi	r25, 0x01	; 1
     c5e:	fc 01       	movw	r30, r24
     c60:	80 81       	ld	r24, Z
     c62:	27 96       	adiw	r28, 0x07	; 7
     c64:	0f b6       	in	r0, 0x3f	; 63
     c66:	f8 94       	cli
     c68:	de bf       	out	0x3e, r29	; 62
     c6a:	0f be       	out	0x3f, r0	; 63
     c6c:	cd bf       	out	0x3d, r28	; 61
     c6e:	df 91       	pop	r29
     c70:	cf 91       	pop	r28
     c72:	08 95       	ret

00000c74 <__udivmodsi4>:
     c74:	a1 e2       	ldi	r26, 0x21	; 33
     c76:	1a 2e       	mov	r1, r26
     c78:	aa 1b       	sub	r26, r26
     c7a:	bb 1b       	sub	r27, r27
     c7c:	fd 01       	movw	r30, r26
     c7e:	0d c0       	rjmp	.+26     	; 0xc9a <__udivmodsi4_ep>

00000c80 <__udivmodsi4_loop>:
     c80:	aa 1f       	adc	r26, r26
     c82:	bb 1f       	adc	r27, r27
     c84:	ee 1f       	adc	r30, r30
     c86:	ff 1f       	adc	r31, r31
     c88:	a2 17       	cp	r26, r18
     c8a:	b3 07       	cpc	r27, r19
     c8c:	e4 07       	cpc	r30, r20
     c8e:	f5 07       	cpc	r31, r21
     c90:	20 f0       	brcs	.+8      	; 0xc9a <__udivmodsi4_ep>
     c92:	a2 1b       	sub	r26, r18
     c94:	b3 0b       	sbc	r27, r19
     c96:	e4 0b       	sbc	r30, r20
     c98:	f5 0b       	sbc	r31, r21

00000c9a <__udivmodsi4_ep>:
     c9a:	66 1f       	adc	r22, r22
     c9c:	77 1f       	adc	r23, r23
     c9e:	88 1f       	adc	r24, r24
     ca0:	99 1f       	adc	r25, r25
     ca2:	1a 94       	dec	r1
     ca4:	69 f7       	brne	.-38     	; 0xc80 <__udivmodsi4_loop>
     ca6:	60 95       	com	r22
     ca8:	70 95       	com	r23
     caa:	80 95       	com	r24
     cac:	90 95       	com	r25
     cae:	9b 01       	movw	r18, r22
     cb0:	ac 01       	movw	r20, r24
     cb2:	bd 01       	movw	r22, r26
     cb4:	cf 01       	movw	r24, r30
     cb6:	08 95       	ret

00000cb8 <__mulshisi3>:
     cb8:	b7 ff       	sbrs	r27, 7
     cba:	04 c0       	rjmp	.+8      	; 0xcc4 <__muluhisi3>

00000cbc <__mulohisi3>:
     cbc:	03 d0       	rcall	.+6      	; 0xcc4 <__muluhisi3>
     cbe:	82 1b       	sub	r24, r18
     cc0:	93 0b       	sbc	r25, r19
     cc2:	08 95       	ret

00000cc4 <__muluhisi3>:
     cc4:	09 d0       	rcall	.+18     	; 0xcd8 <__umulhisi3>
     cc6:	a5 9f       	mul	r26, r21
     cc8:	90 0d       	add	r25, r0
     cca:	b4 9f       	mul	r27, r20
     ccc:	90 0d       	add	r25, r0
     cce:	a4 9f       	mul	r26, r20
     cd0:	80 0d       	add	r24, r0
     cd2:	91 1d       	adc	r25, r1
     cd4:	11 24       	eor	r1, r1
     cd6:	08 95       	ret

00000cd8 <__umulhisi3>:
     cd8:	a2 9f       	mul	r26, r18
     cda:	b0 01       	movw	r22, r0
     cdc:	b3 9f       	mul	r27, r19
     cde:	c0 01       	movw	r24, r0
     ce0:	a3 9f       	mul	r26, r19
     ce2:	70 0d       	add	r23, r0
     ce4:	81 1d       	adc	r24, r1
     ce6:	11 24       	eor	r1, r1
     ce8:	91 1d       	adc	r25, r1
     cea:	b2 9f       	mul	r27, r18
     cec:	70 0d       	add	r23, r0
     cee:	81 1d       	adc	r24, r1
     cf0:	11 24       	eor	r1, r1
     cf2:	91 1d       	adc	r25, r1
     cf4:	08 95       	ret

00000cf6 <printf>:
     cf6:	cf 93       	push	r28
     cf8:	df 93       	push	r29
     cfa:	cd b7       	in	r28, 0x3d	; 61
     cfc:	de b7       	in	r29, 0x3e	; 62
     cfe:	ae 01       	movw	r20, r28
     d00:	4b 5f       	subi	r20, 0xFB	; 251
     d02:	5f 4f       	sbci	r21, 0xFF	; 255
     d04:	fa 01       	movw	r30, r20
     d06:	61 91       	ld	r22, Z+
     d08:	71 91       	ld	r23, Z+
     d0a:	af 01       	movw	r20, r30
     d0c:	80 91 b8 04 	lds	r24, 0x04B8	; 0x8004b8 <__iob+0x2>
     d10:	90 91 b9 04 	lds	r25, 0x04B9	; 0x8004b9 <__iob+0x3>
     d14:	38 d0       	rcall	.+112    	; 0xd86 <vfprintf>
     d16:	df 91       	pop	r29
     d18:	cf 91       	pop	r28
     d1a:	08 95       	ret

00000d1c <putchar>:
     d1c:	60 91 b8 04 	lds	r22, 0x04B8	; 0x8004b8 <__iob+0x2>
     d20:	70 91 b9 04 	lds	r23, 0x04B9	; 0x8004b9 <__iob+0x3>
     d24:	43 c2       	rjmp	.+1158   	; 0x11ac <fputc>

00000d26 <puts>:
     d26:	0f 93       	push	r16
     d28:	1f 93       	push	r17
     d2a:	cf 93       	push	r28
     d2c:	df 93       	push	r29
     d2e:	e0 91 b8 04 	lds	r30, 0x04B8	; 0x8004b8 <__iob+0x2>
     d32:	f0 91 b9 04 	lds	r31, 0x04B9	; 0x8004b9 <__iob+0x3>
     d36:	23 81       	ldd	r18, Z+3	; 0x03
     d38:	21 ff       	sbrs	r18, 1
     d3a:	1b c0       	rjmp	.+54     	; 0xd72 <puts+0x4c>
     d3c:	8c 01       	movw	r16, r24
     d3e:	d0 e0       	ldi	r29, 0x00	; 0
     d40:	c0 e0       	ldi	r28, 0x00	; 0
     d42:	f8 01       	movw	r30, r16
     d44:	81 91       	ld	r24, Z+
     d46:	8f 01       	movw	r16, r30
     d48:	60 91 b8 04 	lds	r22, 0x04B8	; 0x8004b8 <__iob+0x2>
     d4c:	70 91 b9 04 	lds	r23, 0x04B9	; 0x8004b9 <__iob+0x3>
     d50:	db 01       	movw	r26, r22
     d52:	18 96       	adiw	r26, 0x08	; 8
     d54:	ed 91       	ld	r30, X+
     d56:	fc 91       	ld	r31, X
     d58:	19 97       	sbiw	r26, 0x09	; 9
     d5a:	88 23       	and	r24, r24
     d5c:	31 f0       	breq	.+12     	; 0xd6a <puts+0x44>
     d5e:	09 95       	icall
     d60:	89 2b       	or	r24, r25
     d62:	79 f3       	breq	.-34     	; 0xd42 <puts+0x1c>
     d64:	df ef       	ldi	r29, 0xFF	; 255
     d66:	cf ef       	ldi	r28, 0xFF	; 255
     d68:	ec cf       	rjmp	.-40     	; 0xd42 <puts+0x1c>
     d6a:	8a e0       	ldi	r24, 0x0A	; 10
     d6c:	09 95       	icall
     d6e:	89 2b       	or	r24, r25
     d70:	19 f0       	breq	.+6      	; 0xd78 <puts+0x52>
     d72:	8f ef       	ldi	r24, 0xFF	; 255
     d74:	9f ef       	ldi	r25, 0xFF	; 255
     d76:	02 c0       	rjmp	.+4      	; 0xd7c <puts+0x56>
     d78:	8d 2f       	mov	r24, r29
     d7a:	9c 2f       	mov	r25, r28
     d7c:	df 91       	pop	r29
     d7e:	cf 91       	pop	r28
     d80:	1f 91       	pop	r17
     d82:	0f 91       	pop	r16
     d84:	08 95       	ret

00000d86 <vfprintf>:
     d86:	2f 92       	push	r2
     d88:	3f 92       	push	r3
     d8a:	4f 92       	push	r4
     d8c:	5f 92       	push	r5
     d8e:	6f 92       	push	r6
     d90:	7f 92       	push	r7
     d92:	8f 92       	push	r8
     d94:	9f 92       	push	r9
     d96:	af 92       	push	r10
     d98:	bf 92       	push	r11
     d9a:	cf 92       	push	r12
     d9c:	df 92       	push	r13
     d9e:	ef 92       	push	r14
     da0:	ff 92       	push	r15
     da2:	0f 93       	push	r16
     da4:	1f 93       	push	r17
     da6:	cf 93       	push	r28
     da8:	df 93       	push	r29
     daa:	cd b7       	in	r28, 0x3d	; 61
     dac:	de b7       	in	r29, 0x3e	; 62
     dae:	2b 97       	sbiw	r28, 0x0b	; 11
     db0:	0f b6       	in	r0, 0x3f	; 63
     db2:	f8 94       	cli
     db4:	de bf       	out	0x3e, r29	; 62
     db6:	0f be       	out	0x3f, r0	; 63
     db8:	cd bf       	out	0x3d, r28	; 61
     dba:	6c 01       	movw	r12, r24
     dbc:	7b 01       	movw	r14, r22
     dbe:	8a 01       	movw	r16, r20
     dc0:	fc 01       	movw	r30, r24
     dc2:	17 82       	std	Z+7, r1	; 0x07
     dc4:	16 82       	std	Z+6, r1	; 0x06
     dc6:	83 81       	ldd	r24, Z+3	; 0x03
     dc8:	81 ff       	sbrs	r24, 1
     dca:	bf c1       	rjmp	.+894    	; 0x114a <vfprintf+0x3c4>
     dcc:	ce 01       	movw	r24, r28
     dce:	01 96       	adiw	r24, 0x01	; 1
     dd0:	3c 01       	movw	r6, r24
     dd2:	f6 01       	movw	r30, r12
     dd4:	93 81       	ldd	r25, Z+3	; 0x03
     dd6:	f7 01       	movw	r30, r14
     dd8:	93 fd       	sbrc	r25, 3
     dda:	85 91       	lpm	r24, Z+
     ddc:	93 ff       	sbrs	r25, 3
     dde:	81 91       	ld	r24, Z+
     de0:	7f 01       	movw	r14, r30
     de2:	88 23       	and	r24, r24
     de4:	09 f4       	brne	.+2      	; 0xde8 <vfprintf+0x62>
     de6:	ad c1       	rjmp	.+858    	; 0x1142 <vfprintf+0x3bc>
     de8:	85 32       	cpi	r24, 0x25	; 37
     dea:	39 f4       	brne	.+14     	; 0xdfa <vfprintf+0x74>
     dec:	93 fd       	sbrc	r25, 3
     dee:	85 91       	lpm	r24, Z+
     df0:	93 ff       	sbrs	r25, 3
     df2:	81 91       	ld	r24, Z+
     df4:	7f 01       	movw	r14, r30
     df6:	85 32       	cpi	r24, 0x25	; 37
     df8:	21 f4       	brne	.+8      	; 0xe02 <vfprintf+0x7c>
     dfa:	b6 01       	movw	r22, r12
     dfc:	90 e0       	ldi	r25, 0x00	; 0
     dfe:	d6 d1       	rcall	.+940    	; 0x11ac <fputc>
     e00:	e8 cf       	rjmp	.-48     	; 0xdd2 <vfprintf+0x4c>
     e02:	91 2c       	mov	r9, r1
     e04:	21 2c       	mov	r2, r1
     e06:	31 2c       	mov	r3, r1
     e08:	ff e1       	ldi	r31, 0x1F	; 31
     e0a:	f3 15       	cp	r31, r3
     e0c:	d8 f0       	brcs	.+54     	; 0xe44 <vfprintf+0xbe>
     e0e:	8b 32       	cpi	r24, 0x2B	; 43
     e10:	79 f0       	breq	.+30     	; 0xe30 <vfprintf+0xaa>
     e12:	38 f4       	brcc	.+14     	; 0xe22 <vfprintf+0x9c>
     e14:	80 32       	cpi	r24, 0x20	; 32
     e16:	79 f0       	breq	.+30     	; 0xe36 <vfprintf+0xb0>
     e18:	83 32       	cpi	r24, 0x23	; 35
     e1a:	a1 f4       	brne	.+40     	; 0xe44 <vfprintf+0xbe>
     e1c:	23 2d       	mov	r18, r3
     e1e:	20 61       	ori	r18, 0x10	; 16
     e20:	1d c0       	rjmp	.+58     	; 0xe5c <vfprintf+0xd6>
     e22:	8d 32       	cpi	r24, 0x2D	; 45
     e24:	61 f0       	breq	.+24     	; 0xe3e <vfprintf+0xb8>
     e26:	80 33       	cpi	r24, 0x30	; 48
     e28:	69 f4       	brne	.+26     	; 0xe44 <vfprintf+0xbe>
     e2a:	23 2d       	mov	r18, r3
     e2c:	21 60       	ori	r18, 0x01	; 1
     e2e:	16 c0       	rjmp	.+44     	; 0xe5c <vfprintf+0xd6>
     e30:	83 2d       	mov	r24, r3
     e32:	82 60       	ori	r24, 0x02	; 2
     e34:	38 2e       	mov	r3, r24
     e36:	e3 2d       	mov	r30, r3
     e38:	e4 60       	ori	r30, 0x04	; 4
     e3a:	3e 2e       	mov	r3, r30
     e3c:	2a c0       	rjmp	.+84     	; 0xe92 <vfprintf+0x10c>
     e3e:	f3 2d       	mov	r31, r3
     e40:	f8 60       	ori	r31, 0x08	; 8
     e42:	1d c0       	rjmp	.+58     	; 0xe7e <vfprintf+0xf8>
     e44:	37 fc       	sbrc	r3, 7
     e46:	2d c0       	rjmp	.+90     	; 0xea2 <vfprintf+0x11c>
     e48:	20 ed       	ldi	r18, 0xD0	; 208
     e4a:	28 0f       	add	r18, r24
     e4c:	2a 30       	cpi	r18, 0x0A	; 10
     e4e:	40 f0       	brcs	.+16     	; 0xe60 <vfprintf+0xda>
     e50:	8e 32       	cpi	r24, 0x2E	; 46
     e52:	b9 f4       	brne	.+46     	; 0xe82 <vfprintf+0xfc>
     e54:	36 fc       	sbrc	r3, 6
     e56:	75 c1       	rjmp	.+746    	; 0x1142 <vfprintf+0x3bc>
     e58:	23 2d       	mov	r18, r3
     e5a:	20 64       	ori	r18, 0x40	; 64
     e5c:	32 2e       	mov	r3, r18
     e5e:	19 c0       	rjmp	.+50     	; 0xe92 <vfprintf+0x10c>
     e60:	36 fe       	sbrs	r3, 6
     e62:	06 c0       	rjmp	.+12     	; 0xe70 <vfprintf+0xea>
     e64:	8a e0       	ldi	r24, 0x0A	; 10
     e66:	98 9e       	mul	r9, r24
     e68:	20 0d       	add	r18, r0
     e6a:	11 24       	eor	r1, r1
     e6c:	92 2e       	mov	r9, r18
     e6e:	11 c0       	rjmp	.+34     	; 0xe92 <vfprintf+0x10c>
     e70:	ea e0       	ldi	r30, 0x0A	; 10
     e72:	2e 9e       	mul	r2, r30
     e74:	20 0d       	add	r18, r0
     e76:	11 24       	eor	r1, r1
     e78:	22 2e       	mov	r2, r18
     e7a:	f3 2d       	mov	r31, r3
     e7c:	f0 62       	ori	r31, 0x20	; 32
     e7e:	3f 2e       	mov	r3, r31
     e80:	08 c0       	rjmp	.+16     	; 0xe92 <vfprintf+0x10c>
     e82:	8c 36       	cpi	r24, 0x6C	; 108
     e84:	21 f4       	brne	.+8      	; 0xe8e <vfprintf+0x108>
     e86:	83 2d       	mov	r24, r3
     e88:	80 68       	ori	r24, 0x80	; 128
     e8a:	38 2e       	mov	r3, r24
     e8c:	02 c0       	rjmp	.+4      	; 0xe92 <vfprintf+0x10c>
     e8e:	88 36       	cpi	r24, 0x68	; 104
     e90:	41 f4       	brne	.+16     	; 0xea2 <vfprintf+0x11c>
     e92:	f7 01       	movw	r30, r14
     e94:	93 fd       	sbrc	r25, 3
     e96:	85 91       	lpm	r24, Z+
     e98:	93 ff       	sbrs	r25, 3
     e9a:	81 91       	ld	r24, Z+
     e9c:	7f 01       	movw	r14, r30
     e9e:	81 11       	cpse	r24, r1
     ea0:	b3 cf       	rjmp	.-154    	; 0xe08 <vfprintf+0x82>
     ea2:	98 2f       	mov	r25, r24
     ea4:	9f 7d       	andi	r25, 0xDF	; 223
     ea6:	95 54       	subi	r25, 0x45	; 69
     ea8:	93 30       	cpi	r25, 0x03	; 3
     eaa:	28 f4       	brcc	.+10     	; 0xeb6 <vfprintf+0x130>
     eac:	0c 5f       	subi	r16, 0xFC	; 252
     eae:	1f 4f       	sbci	r17, 0xFF	; 255
     eb0:	9f e3       	ldi	r25, 0x3F	; 63
     eb2:	99 83       	std	Y+1, r25	; 0x01
     eb4:	0d c0       	rjmp	.+26     	; 0xed0 <vfprintf+0x14a>
     eb6:	83 36       	cpi	r24, 0x63	; 99
     eb8:	31 f0       	breq	.+12     	; 0xec6 <vfprintf+0x140>
     eba:	83 37       	cpi	r24, 0x73	; 115
     ebc:	71 f0       	breq	.+28     	; 0xeda <vfprintf+0x154>
     ebe:	83 35       	cpi	r24, 0x53	; 83
     ec0:	09 f0       	breq	.+2      	; 0xec4 <vfprintf+0x13e>
     ec2:	55 c0       	rjmp	.+170    	; 0xf6e <vfprintf+0x1e8>
     ec4:	20 c0       	rjmp	.+64     	; 0xf06 <vfprintf+0x180>
     ec6:	f8 01       	movw	r30, r16
     ec8:	80 81       	ld	r24, Z
     eca:	89 83       	std	Y+1, r24	; 0x01
     ecc:	0e 5f       	subi	r16, 0xFE	; 254
     ece:	1f 4f       	sbci	r17, 0xFF	; 255
     ed0:	88 24       	eor	r8, r8
     ed2:	83 94       	inc	r8
     ed4:	91 2c       	mov	r9, r1
     ed6:	53 01       	movw	r10, r6
     ed8:	12 c0       	rjmp	.+36     	; 0xefe <vfprintf+0x178>
     eda:	28 01       	movw	r4, r16
     edc:	f2 e0       	ldi	r31, 0x02	; 2
     ede:	4f 0e       	add	r4, r31
     ee0:	51 1c       	adc	r5, r1
     ee2:	f8 01       	movw	r30, r16
     ee4:	a0 80       	ld	r10, Z
     ee6:	b1 80       	ldd	r11, Z+1	; 0x01
     ee8:	36 fe       	sbrs	r3, 6
     eea:	03 c0       	rjmp	.+6      	; 0xef2 <vfprintf+0x16c>
     eec:	69 2d       	mov	r22, r9
     eee:	70 e0       	ldi	r23, 0x00	; 0
     ef0:	02 c0       	rjmp	.+4      	; 0xef6 <vfprintf+0x170>
     ef2:	6f ef       	ldi	r22, 0xFF	; 255
     ef4:	7f ef       	ldi	r23, 0xFF	; 255
     ef6:	c5 01       	movw	r24, r10
     ef8:	4e d1       	rcall	.+668    	; 0x1196 <strnlen>
     efa:	4c 01       	movw	r8, r24
     efc:	82 01       	movw	r16, r4
     efe:	f3 2d       	mov	r31, r3
     f00:	ff 77       	andi	r31, 0x7F	; 127
     f02:	3f 2e       	mov	r3, r31
     f04:	15 c0       	rjmp	.+42     	; 0xf30 <vfprintf+0x1aa>
     f06:	28 01       	movw	r4, r16
     f08:	22 e0       	ldi	r18, 0x02	; 2
     f0a:	42 0e       	add	r4, r18
     f0c:	51 1c       	adc	r5, r1
     f0e:	f8 01       	movw	r30, r16
     f10:	a0 80       	ld	r10, Z
     f12:	b1 80       	ldd	r11, Z+1	; 0x01
     f14:	36 fe       	sbrs	r3, 6
     f16:	03 c0       	rjmp	.+6      	; 0xf1e <vfprintf+0x198>
     f18:	69 2d       	mov	r22, r9
     f1a:	70 e0       	ldi	r23, 0x00	; 0
     f1c:	02 c0       	rjmp	.+4      	; 0xf22 <vfprintf+0x19c>
     f1e:	6f ef       	ldi	r22, 0xFF	; 255
     f20:	7f ef       	ldi	r23, 0xFF	; 255
     f22:	c5 01       	movw	r24, r10
     f24:	2d d1       	rcall	.+602    	; 0x1180 <strnlen_P>
     f26:	4c 01       	movw	r8, r24
     f28:	f3 2d       	mov	r31, r3
     f2a:	f0 68       	ori	r31, 0x80	; 128
     f2c:	3f 2e       	mov	r3, r31
     f2e:	82 01       	movw	r16, r4
     f30:	33 fc       	sbrc	r3, 3
     f32:	19 c0       	rjmp	.+50     	; 0xf66 <vfprintf+0x1e0>
     f34:	82 2d       	mov	r24, r2
     f36:	90 e0       	ldi	r25, 0x00	; 0
     f38:	88 16       	cp	r8, r24
     f3a:	99 06       	cpc	r9, r25
     f3c:	a0 f4       	brcc	.+40     	; 0xf66 <vfprintf+0x1e0>
     f3e:	b6 01       	movw	r22, r12
     f40:	80 e2       	ldi	r24, 0x20	; 32
     f42:	90 e0       	ldi	r25, 0x00	; 0
     f44:	33 d1       	rcall	.+614    	; 0x11ac <fputc>
     f46:	2a 94       	dec	r2
     f48:	f5 cf       	rjmp	.-22     	; 0xf34 <vfprintf+0x1ae>
     f4a:	f5 01       	movw	r30, r10
     f4c:	37 fc       	sbrc	r3, 7
     f4e:	85 91       	lpm	r24, Z+
     f50:	37 fe       	sbrs	r3, 7
     f52:	81 91       	ld	r24, Z+
     f54:	5f 01       	movw	r10, r30
     f56:	b6 01       	movw	r22, r12
     f58:	90 e0       	ldi	r25, 0x00	; 0
     f5a:	28 d1       	rcall	.+592    	; 0x11ac <fputc>
     f5c:	21 10       	cpse	r2, r1
     f5e:	2a 94       	dec	r2
     f60:	21 e0       	ldi	r18, 0x01	; 1
     f62:	82 1a       	sub	r8, r18
     f64:	91 08       	sbc	r9, r1
     f66:	81 14       	cp	r8, r1
     f68:	91 04       	cpc	r9, r1
     f6a:	79 f7       	brne	.-34     	; 0xf4a <vfprintf+0x1c4>
     f6c:	e1 c0       	rjmp	.+450    	; 0x1130 <vfprintf+0x3aa>
     f6e:	84 36       	cpi	r24, 0x64	; 100
     f70:	11 f0       	breq	.+4      	; 0xf76 <vfprintf+0x1f0>
     f72:	89 36       	cpi	r24, 0x69	; 105
     f74:	39 f5       	brne	.+78     	; 0xfc4 <vfprintf+0x23e>
     f76:	f8 01       	movw	r30, r16
     f78:	37 fe       	sbrs	r3, 7
     f7a:	07 c0       	rjmp	.+14     	; 0xf8a <vfprintf+0x204>
     f7c:	60 81       	ld	r22, Z
     f7e:	71 81       	ldd	r23, Z+1	; 0x01
     f80:	82 81       	ldd	r24, Z+2	; 0x02
     f82:	93 81       	ldd	r25, Z+3	; 0x03
     f84:	0c 5f       	subi	r16, 0xFC	; 252
     f86:	1f 4f       	sbci	r17, 0xFF	; 255
     f88:	08 c0       	rjmp	.+16     	; 0xf9a <vfprintf+0x214>
     f8a:	60 81       	ld	r22, Z
     f8c:	71 81       	ldd	r23, Z+1	; 0x01
     f8e:	07 2e       	mov	r0, r23
     f90:	00 0c       	add	r0, r0
     f92:	88 0b       	sbc	r24, r24
     f94:	99 0b       	sbc	r25, r25
     f96:	0e 5f       	subi	r16, 0xFE	; 254
     f98:	1f 4f       	sbci	r17, 0xFF	; 255
     f9a:	f3 2d       	mov	r31, r3
     f9c:	ff 76       	andi	r31, 0x6F	; 111
     f9e:	3f 2e       	mov	r3, r31
     fa0:	97 ff       	sbrs	r25, 7
     fa2:	09 c0       	rjmp	.+18     	; 0xfb6 <vfprintf+0x230>
     fa4:	90 95       	com	r25
     fa6:	80 95       	com	r24
     fa8:	70 95       	com	r23
     faa:	61 95       	neg	r22
     fac:	7f 4f       	sbci	r23, 0xFF	; 255
     fae:	8f 4f       	sbci	r24, 0xFF	; 255
     fb0:	9f 4f       	sbci	r25, 0xFF	; 255
     fb2:	f0 68       	ori	r31, 0x80	; 128
     fb4:	3f 2e       	mov	r3, r31
     fb6:	2a e0       	ldi	r18, 0x0A	; 10
     fb8:	30 e0       	ldi	r19, 0x00	; 0
     fba:	a3 01       	movw	r20, r6
     fbc:	33 d1       	rcall	.+614    	; 0x1224 <__ultoa_invert>
     fbe:	88 2e       	mov	r8, r24
     fc0:	86 18       	sub	r8, r6
     fc2:	44 c0       	rjmp	.+136    	; 0x104c <vfprintf+0x2c6>
     fc4:	85 37       	cpi	r24, 0x75	; 117
     fc6:	31 f4       	brne	.+12     	; 0xfd4 <vfprintf+0x24e>
     fc8:	23 2d       	mov	r18, r3
     fca:	2f 7e       	andi	r18, 0xEF	; 239
     fcc:	b2 2e       	mov	r11, r18
     fce:	2a e0       	ldi	r18, 0x0A	; 10
     fd0:	30 e0       	ldi	r19, 0x00	; 0
     fd2:	25 c0       	rjmp	.+74     	; 0x101e <vfprintf+0x298>
     fd4:	93 2d       	mov	r25, r3
     fd6:	99 7f       	andi	r25, 0xF9	; 249
     fd8:	b9 2e       	mov	r11, r25
     fda:	8f 36       	cpi	r24, 0x6F	; 111
     fdc:	c1 f0       	breq	.+48     	; 0x100e <vfprintf+0x288>
     fde:	18 f4       	brcc	.+6      	; 0xfe6 <vfprintf+0x260>
     fe0:	88 35       	cpi	r24, 0x58	; 88
     fe2:	79 f0       	breq	.+30     	; 0x1002 <vfprintf+0x27c>
     fe4:	ae c0       	rjmp	.+348    	; 0x1142 <vfprintf+0x3bc>
     fe6:	80 37       	cpi	r24, 0x70	; 112
     fe8:	19 f0       	breq	.+6      	; 0xff0 <vfprintf+0x26a>
     fea:	88 37       	cpi	r24, 0x78	; 120
     fec:	21 f0       	breq	.+8      	; 0xff6 <vfprintf+0x270>
     fee:	a9 c0       	rjmp	.+338    	; 0x1142 <vfprintf+0x3bc>
     ff0:	e9 2f       	mov	r30, r25
     ff2:	e0 61       	ori	r30, 0x10	; 16
     ff4:	be 2e       	mov	r11, r30
     ff6:	b4 fe       	sbrs	r11, 4
     ff8:	0d c0       	rjmp	.+26     	; 0x1014 <vfprintf+0x28e>
     ffa:	fb 2d       	mov	r31, r11
     ffc:	f4 60       	ori	r31, 0x04	; 4
     ffe:	bf 2e       	mov	r11, r31
    1000:	09 c0       	rjmp	.+18     	; 0x1014 <vfprintf+0x28e>
    1002:	34 fe       	sbrs	r3, 4
    1004:	0a c0       	rjmp	.+20     	; 0x101a <vfprintf+0x294>
    1006:	29 2f       	mov	r18, r25
    1008:	26 60       	ori	r18, 0x06	; 6
    100a:	b2 2e       	mov	r11, r18
    100c:	06 c0       	rjmp	.+12     	; 0x101a <vfprintf+0x294>
    100e:	28 e0       	ldi	r18, 0x08	; 8
    1010:	30 e0       	ldi	r19, 0x00	; 0
    1012:	05 c0       	rjmp	.+10     	; 0x101e <vfprintf+0x298>
    1014:	20 e1       	ldi	r18, 0x10	; 16
    1016:	30 e0       	ldi	r19, 0x00	; 0
    1018:	02 c0       	rjmp	.+4      	; 0x101e <vfprintf+0x298>
    101a:	20 e1       	ldi	r18, 0x10	; 16
    101c:	32 e0       	ldi	r19, 0x02	; 2
    101e:	f8 01       	movw	r30, r16
    1020:	b7 fe       	sbrs	r11, 7
    1022:	07 c0       	rjmp	.+14     	; 0x1032 <vfprintf+0x2ac>
    1024:	60 81       	ld	r22, Z
    1026:	71 81       	ldd	r23, Z+1	; 0x01
    1028:	82 81       	ldd	r24, Z+2	; 0x02
    102a:	93 81       	ldd	r25, Z+3	; 0x03
    102c:	0c 5f       	subi	r16, 0xFC	; 252
    102e:	1f 4f       	sbci	r17, 0xFF	; 255
    1030:	06 c0       	rjmp	.+12     	; 0x103e <vfprintf+0x2b8>
    1032:	60 81       	ld	r22, Z
    1034:	71 81       	ldd	r23, Z+1	; 0x01
    1036:	80 e0       	ldi	r24, 0x00	; 0
    1038:	90 e0       	ldi	r25, 0x00	; 0
    103a:	0e 5f       	subi	r16, 0xFE	; 254
    103c:	1f 4f       	sbci	r17, 0xFF	; 255
    103e:	a3 01       	movw	r20, r6
    1040:	f1 d0       	rcall	.+482    	; 0x1224 <__ultoa_invert>
    1042:	88 2e       	mov	r8, r24
    1044:	86 18       	sub	r8, r6
    1046:	fb 2d       	mov	r31, r11
    1048:	ff 77       	andi	r31, 0x7F	; 127
    104a:	3f 2e       	mov	r3, r31
    104c:	36 fe       	sbrs	r3, 6
    104e:	0d c0       	rjmp	.+26     	; 0x106a <vfprintf+0x2e4>
    1050:	23 2d       	mov	r18, r3
    1052:	2e 7f       	andi	r18, 0xFE	; 254
    1054:	a2 2e       	mov	r10, r18
    1056:	89 14       	cp	r8, r9
    1058:	58 f4       	brcc	.+22     	; 0x1070 <vfprintf+0x2ea>
    105a:	34 fe       	sbrs	r3, 4
    105c:	0b c0       	rjmp	.+22     	; 0x1074 <vfprintf+0x2ee>
    105e:	32 fc       	sbrc	r3, 2
    1060:	09 c0       	rjmp	.+18     	; 0x1074 <vfprintf+0x2ee>
    1062:	83 2d       	mov	r24, r3
    1064:	8e 7e       	andi	r24, 0xEE	; 238
    1066:	a8 2e       	mov	r10, r24
    1068:	05 c0       	rjmp	.+10     	; 0x1074 <vfprintf+0x2ee>
    106a:	b8 2c       	mov	r11, r8
    106c:	a3 2c       	mov	r10, r3
    106e:	03 c0       	rjmp	.+6      	; 0x1076 <vfprintf+0x2f0>
    1070:	b8 2c       	mov	r11, r8
    1072:	01 c0       	rjmp	.+2      	; 0x1076 <vfprintf+0x2f0>
    1074:	b9 2c       	mov	r11, r9
    1076:	a4 fe       	sbrs	r10, 4
    1078:	0f c0       	rjmp	.+30     	; 0x1098 <vfprintf+0x312>
    107a:	fe 01       	movw	r30, r28
    107c:	e8 0d       	add	r30, r8
    107e:	f1 1d       	adc	r31, r1
    1080:	80 81       	ld	r24, Z
    1082:	80 33       	cpi	r24, 0x30	; 48
    1084:	21 f4       	brne	.+8      	; 0x108e <vfprintf+0x308>
    1086:	9a 2d       	mov	r25, r10
    1088:	99 7e       	andi	r25, 0xE9	; 233
    108a:	a9 2e       	mov	r10, r25
    108c:	09 c0       	rjmp	.+18     	; 0x10a0 <vfprintf+0x31a>
    108e:	a2 fe       	sbrs	r10, 2
    1090:	06 c0       	rjmp	.+12     	; 0x109e <vfprintf+0x318>
    1092:	b3 94       	inc	r11
    1094:	b3 94       	inc	r11
    1096:	04 c0       	rjmp	.+8      	; 0x10a0 <vfprintf+0x31a>
    1098:	8a 2d       	mov	r24, r10
    109a:	86 78       	andi	r24, 0x86	; 134
    109c:	09 f0       	breq	.+2      	; 0x10a0 <vfprintf+0x31a>
    109e:	b3 94       	inc	r11
    10a0:	a3 fc       	sbrc	r10, 3
    10a2:	10 c0       	rjmp	.+32     	; 0x10c4 <vfprintf+0x33e>
    10a4:	a0 fe       	sbrs	r10, 0
    10a6:	06 c0       	rjmp	.+12     	; 0x10b4 <vfprintf+0x32e>
    10a8:	b2 14       	cp	r11, r2
    10aa:	80 f4       	brcc	.+32     	; 0x10cc <vfprintf+0x346>
    10ac:	28 0c       	add	r2, r8
    10ae:	92 2c       	mov	r9, r2
    10b0:	9b 18       	sub	r9, r11
    10b2:	0d c0       	rjmp	.+26     	; 0x10ce <vfprintf+0x348>
    10b4:	b2 14       	cp	r11, r2
    10b6:	58 f4       	brcc	.+22     	; 0x10ce <vfprintf+0x348>
    10b8:	b6 01       	movw	r22, r12
    10ba:	80 e2       	ldi	r24, 0x20	; 32
    10bc:	90 e0       	ldi	r25, 0x00	; 0
    10be:	76 d0       	rcall	.+236    	; 0x11ac <fputc>
    10c0:	b3 94       	inc	r11
    10c2:	f8 cf       	rjmp	.-16     	; 0x10b4 <vfprintf+0x32e>
    10c4:	b2 14       	cp	r11, r2
    10c6:	18 f4       	brcc	.+6      	; 0x10ce <vfprintf+0x348>
    10c8:	2b 18       	sub	r2, r11
    10ca:	02 c0       	rjmp	.+4      	; 0x10d0 <vfprintf+0x34a>
    10cc:	98 2c       	mov	r9, r8
    10ce:	21 2c       	mov	r2, r1
    10d0:	a4 fe       	sbrs	r10, 4
    10d2:	0f c0       	rjmp	.+30     	; 0x10f2 <vfprintf+0x36c>
    10d4:	b6 01       	movw	r22, r12
    10d6:	80 e3       	ldi	r24, 0x30	; 48
    10d8:	90 e0       	ldi	r25, 0x00	; 0
    10da:	68 d0       	rcall	.+208    	; 0x11ac <fputc>
    10dc:	a2 fe       	sbrs	r10, 2
    10de:	16 c0       	rjmp	.+44     	; 0x110c <vfprintf+0x386>
    10e0:	a1 fc       	sbrc	r10, 1
    10e2:	03 c0       	rjmp	.+6      	; 0x10ea <vfprintf+0x364>
    10e4:	88 e7       	ldi	r24, 0x78	; 120
    10e6:	90 e0       	ldi	r25, 0x00	; 0
    10e8:	02 c0       	rjmp	.+4      	; 0x10ee <vfprintf+0x368>
    10ea:	88 e5       	ldi	r24, 0x58	; 88
    10ec:	90 e0       	ldi	r25, 0x00	; 0
    10ee:	b6 01       	movw	r22, r12
    10f0:	0c c0       	rjmp	.+24     	; 0x110a <vfprintf+0x384>
    10f2:	8a 2d       	mov	r24, r10
    10f4:	86 78       	andi	r24, 0x86	; 134
    10f6:	51 f0       	breq	.+20     	; 0x110c <vfprintf+0x386>
    10f8:	a1 fe       	sbrs	r10, 1
    10fa:	02 c0       	rjmp	.+4      	; 0x1100 <vfprintf+0x37a>
    10fc:	8b e2       	ldi	r24, 0x2B	; 43
    10fe:	01 c0       	rjmp	.+2      	; 0x1102 <vfprintf+0x37c>
    1100:	80 e2       	ldi	r24, 0x20	; 32
    1102:	a7 fc       	sbrc	r10, 7
    1104:	8d e2       	ldi	r24, 0x2D	; 45
    1106:	b6 01       	movw	r22, r12
    1108:	90 e0       	ldi	r25, 0x00	; 0
    110a:	50 d0       	rcall	.+160    	; 0x11ac <fputc>
    110c:	89 14       	cp	r8, r9
    110e:	30 f4       	brcc	.+12     	; 0x111c <vfprintf+0x396>
    1110:	b6 01       	movw	r22, r12
    1112:	80 e3       	ldi	r24, 0x30	; 48
    1114:	90 e0       	ldi	r25, 0x00	; 0
    1116:	4a d0       	rcall	.+148    	; 0x11ac <fputc>
    1118:	9a 94       	dec	r9
    111a:	f8 cf       	rjmp	.-16     	; 0x110c <vfprintf+0x386>
    111c:	8a 94       	dec	r8
    111e:	f3 01       	movw	r30, r6
    1120:	e8 0d       	add	r30, r8
    1122:	f1 1d       	adc	r31, r1
    1124:	80 81       	ld	r24, Z
    1126:	b6 01       	movw	r22, r12
    1128:	90 e0       	ldi	r25, 0x00	; 0
    112a:	40 d0       	rcall	.+128    	; 0x11ac <fputc>
    112c:	81 10       	cpse	r8, r1
    112e:	f6 cf       	rjmp	.-20     	; 0x111c <vfprintf+0x396>
    1130:	22 20       	and	r2, r2
    1132:	09 f4       	brne	.+2      	; 0x1136 <vfprintf+0x3b0>
    1134:	4e ce       	rjmp	.-868    	; 0xdd2 <vfprintf+0x4c>
    1136:	b6 01       	movw	r22, r12
    1138:	80 e2       	ldi	r24, 0x20	; 32
    113a:	90 e0       	ldi	r25, 0x00	; 0
    113c:	37 d0       	rcall	.+110    	; 0x11ac <fputc>
    113e:	2a 94       	dec	r2
    1140:	f7 cf       	rjmp	.-18     	; 0x1130 <vfprintf+0x3aa>
    1142:	f6 01       	movw	r30, r12
    1144:	86 81       	ldd	r24, Z+6	; 0x06
    1146:	97 81       	ldd	r25, Z+7	; 0x07
    1148:	02 c0       	rjmp	.+4      	; 0x114e <vfprintf+0x3c8>
    114a:	8f ef       	ldi	r24, 0xFF	; 255
    114c:	9f ef       	ldi	r25, 0xFF	; 255
    114e:	2b 96       	adiw	r28, 0x0b	; 11
    1150:	0f b6       	in	r0, 0x3f	; 63
    1152:	f8 94       	cli
    1154:	de bf       	out	0x3e, r29	; 62
    1156:	0f be       	out	0x3f, r0	; 63
    1158:	cd bf       	out	0x3d, r28	; 61
    115a:	df 91       	pop	r29
    115c:	cf 91       	pop	r28
    115e:	1f 91       	pop	r17
    1160:	0f 91       	pop	r16
    1162:	ff 90       	pop	r15
    1164:	ef 90       	pop	r14
    1166:	df 90       	pop	r13
    1168:	cf 90       	pop	r12
    116a:	bf 90       	pop	r11
    116c:	af 90       	pop	r10
    116e:	9f 90       	pop	r9
    1170:	8f 90       	pop	r8
    1172:	7f 90       	pop	r7
    1174:	6f 90       	pop	r6
    1176:	5f 90       	pop	r5
    1178:	4f 90       	pop	r4
    117a:	3f 90       	pop	r3
    117c:	2f 90       	pop	r2
    117e:	08 95       	ret

00001180 <strnlen_P>:
    1180:	fc 01       	movw	r30, r24
    1182:	05 90       	lpm	r0, Z+
    1184:	61 50       	subi	r22, 0x01	; 1
    1186:	70 40       	sbci	r23, 0x00	; 0
    1188:	01 10       	cpse	r0, r1
    118a:	d8 f7       	brcc	.-10     	; 0x1182 <strnlen_P+0x2>
    118c:	80 95       	com	r24
    118e:	90 95       	com	r25
    1190:	8e 0f       	add	r24, r30
    1192:	9f 1f       	adc	r25, r31
    1194:	08 95       	ret

00001196 <strnlen>:
    1196:	fc 01       	movw	r30, r24
    1198:	61 50       	subi	r22, 0x01	; 1
    119a:	70 40       	sbci	r23, 0x00	; 0
    119c:	01 90       	ld	r0, Z+
    119e:	01 10       	cpse	r0, r1
    11a0:	d8 f7       	brcc	.-10     	; 0x1198 <strnlen+0x2>
    11a2:	80 95       	com	r24
    11a4:	90 95       	com	r25
    11a6:	8e 0f       	add	r24, r30
    11a8:	9f 1f       	adc	r25, r31
    11aa:	08 95       	ret

000011ac <fputc>:
    11ac:	0f 93       	push	r16
    11ae:	1f 93       	push	r17
    11b0:	cf 93       	push	r28
    11b2:	df 93       	push	r29
    11b4:	fb 01       	movw	r30, r22
    11b6:	23 81       	ldd	r18, Z+3	; 0x03
    11b8:	21 fd       	sbrc	r18, 1
    11ba:	03 c0       	rjmp	.+6      	; 0x11c2 <fputc+0x16>
    11bc:	8f ef       	ldi	r24, 0xFF	; 255
    11be:	9f ef       	ldi	r25, 0xFF	; 255
    11c0:	2c c0       	rjmp	.+88     	; 0x121a <fputc+0x6e>
    11c2:	22 ff       	sbrs	r18, 2
    11c4:	16 c0       	rjmp	.+44     	; 0x11f2 <fputc+0x46>
    11c6:	46 81       	ldd	r20, Z+6	; 0x06
    11c8:	57 81       	ldd	r21, Z+7	; 0x07
    11ca:	24 81       	ldd	r18, Z+4	; 0x04
    11cc:	35 81       	ldd	r19, Z+5	; 0x05
    11ce:	42 17       	cp	r20, r18
    11d0:	53 07       	cpc	r21, r19
    11d2:	44 f4       	brge	.+16     	; 0x11e4 <fputc+0x38>
    11d4:	a0 81       	ld	r26, Z
    11d6:	b1 81       	ldd	r27, Z+1	; 0x01
    11d8:	9d 01       	movw	r18, r26
    11da:	2f 5f       	subi	r18, 0xFF	; 255
    11dc:	3f 4f       	sbci	r19, 0xFF	; 255
    11de:	31 83       	std	Z+1, r19	; 0x01
    11e0:	20 83       	st	Z, r18
    11e2:	8c 93       	st	X, r24
    11e4:	26 81       	ldd	r18, Z+6	; 0x06
    11e6:	37 81       	ldd	r19, Z+7	; 0x07
    11e8:	2f 5f       	subi	r18, 0xFF	; 255
    11ea:	3f 4f       	sbci	r19, 0xFF	; 255
    11ec:	37 83       	std	Z+7, r19	; 0x07
    11ee:	26 83       	std	Z+6, r18	; 0x06
    11f0:	14 c0       	rjmp	.+40     	; 0x121a <fputc+0x6e>
    11f2:	8b 01       	movw	r16, r22
    11f4:	ec 01       	movw	r28, r24
    11f6:	fb 01       	movw	r30, r22
    11f8:	00 84       	ldd	r0, Z+8	; 0x08
    11fa:	f1 85       	ldd	r31, Z+9	; 0x09
    11fc:	e0 2d       	mov	r30, r0
    11fe:	09 95       	icall
    1200:	89 2b       	or	r24, r25
    1202:	e1 f6       	brne	.-72     	; 0x11bc <fputc+0x10>
    1204:	d8 01       	movw	r26, r16
    1206:	16 96       	adiw	r26, 0x06	; 6
    1208:	8d 91       	ld	r24, X+
    120a:	9c 91       	ld	r25, X
    120c:	17 97       	sbiw	r26, 0x07	; 7
    120e:	01 96       	adiw	r24, 0x01	; 1
    1210:	17 96       	adiw	r26, 0x07	; 7
    1212:	9c 93       	st	X, r25
    1214:	8e 93       	st	-X, r24
    1216:	16 97       	sbiw	r26, 0x06	; 6
    1218:	ce 01       	movw	r24, r28
    121a:	df 91       	pop	r29
    121c:	cf 91       	pop	r28
    121e:	1f 91       	pop	r17
    1220:	0f 91       	pop	r16
    1222:	08 95       	ret

00001224 <__ultoa_invert>:
    1224:	fa 01       	movw	r30, r20
    1226:	aa 27       	eor	r26, r26
    1228:	28 30       	cpi	r18, 0x08	; 8
    122a:	51 f1       	breq	.+84     	; 0x1280 <__ultoa_invert+0x5c>
    122c:	20 31       	cpi	r18, 0x10	; 16
    122e:	81 f1       	breq	.+96     	; 0x1290 <__ultoa_invert+0x6c>
    1230:	e8 94       	clt
    1232:	6f 93       	push	r22
    1234:	6e 7f       	andi	r22, 0xFE	; 254
    1236:	6e 5f       	subi	r22, 0xFE	; 254
    1238:	7f 4f       	sbci	r23, 0xFF	; 255
    123a:	8f 4f       	sbci	r24, 0xFF	; 255
    123c:	9f 4f       	sbci	r25, 0xFF	; 255
    123e:	af 4f       	sbci	r26, 0xFF	; 255
    1240:	b1 e0       	ldi	r27, 0x01	; 1
    1242:	3e d0       	rcall	.+124    	; 0x12c0 <__ultoa_invert+0x9c>
    1244:	b4 e0       	ldi	r27, 0x04	; 4
    1246:	3c d0       	rcall	.+120    	; 0x12c0 <__ultoa_invert+0x9c>
    1248:	67 0f       	add	r22, r23
    124a:	78 1f       	adc	r23, r24
    124c:	89 1f       	adc	r24, r25
    124e:	9a 1f       	adc	r25, r26
    1250:	a1 1d       	adc	r26, r1
    1252:	68 0f       	add	r22, r24
    1254:	79 1f       	adc	r23, r25
    1256:	8a 1f       	adc	r24, r26
    1258:	91 1d       	adc	r25, r1
    125a:	a1 1d       	adc	r26, r1
    125c:	6a 0f       	add	r22, r26
    125e:	71 1d       	adc	r23, r1
    1260:	81 1d       	adc	r24, r1
    1262:	91 1d       	adc	r25, r1
    1264:	a1 1d       	adc	r26, r1
    1266:	20 d0       	rcall	.+64     	; 0x12a8 <__ultoa_invert+0x84>
    1268:	09 f4       	brne	.+2      	; 0x126c <__ultoa_invert+0x48>
    126a:	68 94       	set
    126c:	3f 91       	pop	r19
    126e:	2a e0       	ldi	r18, 0x0A	; 10
    1270:	26 9f       	mul	r18, r22
    1272:	11 24       	eor	r1, r1
    1274:	30 19       	sub	r19, r0
    1276:	30 5d       	subi	r19, 0xD0	; 208
    1278:	31 93       	st	Z+, r19
    127a:	de f6       	brtc	.-74     	; 0x1232 <__ultoa_invert+0xe>
    127c:	cf 01       	movw	r24, r30
    127e:	08 95       	ret
    1280:	46 2f       	mov	r20, r22
    1282:	47 70       	andi	r20, 0x07	; 7
    1284:	40 5d       	subi	r20, 0xD0	; 208
    1286:	41 93       	st	Z+, r20
    1288:	b3 e0       	ldi	r27, 0x03	; 3
    128a:	0f d0       	rcall	.+30     	; 0x12aa <__ultoa_invert+0x86>
    128c:	c9 f7       	brne	.-14     	; 0x1280 <__ultoa_invert+0x5c>
    128e:	f6 cf       	rjmp	.-20     	; 0x127c <__ultoa_invert+0x58>
    1290:	46 2f       	mov	r20, r22
    1292:	4f 70       	andi	r20, 0x0F	; 15
    1294:	40 5d       	subi	r20, 0xD0	; 208
    1296:	4a 33       	cpi	r20, 0x3A	; 58
    1298:	18 f0       	brcs	.+6      	; 0x12a0 <__ultoa_invert+0x7c>
    129a:	49 5d       	subi	r20, 0xD9	; 217
    129c:	31 fd       	sbrc	r19, 1
    129e:	40 52       	subi	r20, 0x20	; 32
    12a0:	41 93       	st	Z+, r20
    12a2:	02 d0       	rcall	.+4      	; 0x12a8 <__ultoa_invert+0x84>
    12a4:	a9 f7       	brne	.-22     	; 0x1290 <__ultoa_invert+0x6c>
    12a6:	ea cf       	rjmp	.-44     	; 0x127c <__ultoa_invert+0x58>
    12a8:	b4 e0       	ldi	r27, 0x04	; 4
    12aa:	a6 95       	lsr	r26
    12ac:	97 95       	ror	r25
    12ae:	87 95       	ror	r24
    12b0:	77 95       	ror	r23
    12b2:	67 95       	ror	r22
    12b4:	ba 95       	dec	r27
    12b6:	c9 f7       	brne	.-14     	; 0x12aa <__ultoa_invert+0x86>
    12b8:	00 97       	sbiw	r24, 0x00	; 0
    12ba:	61 05       	cpc	r22, r1
    12bc:	71 05       	cpc	r23, r1
    12be:	08 95       	ret
    12c0:	9b 01       	movw	r18, r22
    12c2:	ac 01       	movw	r20, r24
    12c4:	0a 2e       	mov	r0, r26
    12c6:	06 94       	lsr	r0
    12c8:	57 95       	ror	r21
    12ca:	47 95       	ror	r20
    12cc:	37 95       	ror	r19
    12ce:	27 95       	ror	r18
    12d0:	ba 95       	dec	r27
    12d2:	c9 f7       	brne	.-14     	; 0x12c6 <__ultoa_invert+0xa2>
    12d4:	62 0f       	add	r22, r18
    12d6:	73 1f       	adc	r23, r19
    12d8:	84 1f       	adc	r24, r20
    12da:	95 1f       	adc	r25, r21
    12dc:	a0 1d       	adc	r26, r0
    12de:	08 95       	ret

000012e0 <_exit>:
    12e0:	f8 94       	cli

000012e2 <__stop_program>:
    12e2:	ff cf       	rjmp	.-2      	; 0x12e2 <__stop_program>
